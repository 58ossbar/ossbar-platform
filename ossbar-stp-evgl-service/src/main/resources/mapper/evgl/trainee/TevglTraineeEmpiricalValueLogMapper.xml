<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.trainee.persistence.TevglTraineeEmpiricalValueLogMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.trainee.domain.TevglTraineeEmpiricalValueLog">
		<result column="ev_id" jdbcType="VARCHAR"
			property="evId" />
		<result column="type" jdbcType="VARCHAR"
			property="type" />
		<result column="trainee_id" jdbcType="VARCHAR"
			property="traineeId" />
		<result column="ct_id" jdbcType="VARCHAR"
			property="ctId" />	
		<result column="activity_id" jdbcType="VARCHAR"
			property="activityId" />
		<result column="empirical_value" jdbcType="INTEGER"
			property="empiricalValue" />
		<result column="state" jdbcType="VARCHAR"
			property="state" />
		<result column="create_time" jdbcType="VARCHAR"
			property="createTime" />
		<result column="params1" jdbcType="VARCHAR"
			property="params1" />
		<result column="params2" jdbcType="VARCHAR"
			property="params2" />
		<result column="params3" jdbcType="VARCHAR"
			property="params3" />
		<result column="params17" jdbcType="VARCHAR"
                property="params17" />
		<result column="msg" jdbcType="VARCHAR"
			property="msg" />	
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		ev_id,type,trainee_id,ct_id,activity_id,empirical_value,state,create_time,params1,params2,params3,params17
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.trainee.domain.TevglTraineeEmpiricalValueLog">
		INSERT INTO T_EVGL_TRAINEE_EMPIRICAL_VALUE_LOG (
		ev_id ,
		type ,
		trainee_id ,
		ct_id ,
		activity_id ,
		empirical_value ,
		state ,
		create_time ,
		params1 ,
		params2 ,
		params3 ,
		params17 ,
		msg
		) VALUES (

#{evId,jdbcType=VARCHAR} ,

#{type,jdbcType=VARCHAR} ,

#{traineeId,jdbcType=VARCHAR} ,

#{ctId,jdbcType=VARCHAR} ,

#{activityId,jdbcType=VARCHAR} ,

#{empiricalValue,jdbcType=INTEGER} ,

#{state,jdbcType=VARCHAR} ,

#{createTime,jdbcType=VARCHAR} ,

#{params1,jdbcType=VARCHAR} ,

#{params2,jdbcType=VARCHAR} ,

#{params3,jdbcType=VARCHAR} ,

#{params17,jdbcType=VARCHAR} ,

#{msg,jdbcType=VARCHAR} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.trainee.domain.TevglTraineeEmpiricalValueLog">
		UPDATE T_EVGL_TRAINEE_EMPIRICAL_VALUE_LOG 
		<set>
		<if test="type != null">
		type = #{type,jdbcType=VARCHAR},
		</if>
		<if test="traineeId != null">
		trainee_id = #{traineeId,jdbcType=VARCHAR},
		</if>
		<if test="ctId != null">
		ct_id = #{ctId,jdbcType=VARCHAR},
		</if>
		<if test="activityId != null">
		activity_id = #{activityId,jdbcType=VARCHAR},
		</if>
		<if test="empiricalValue != null">
		empirical_value = #{empiricalValue,jdbcType=INTEGER},
		</if>
		<if test="state != null">
		state = #{state,jdbcType=VARCHAR},
		</if>
		<if test="createTime != null">
		create_time = #{createTime,jdbcType=VARCHAR},
		</if>
		<if test="params1 != null">
		params1 = #{params1,jdbcType=VARCHAR},
		</if>
		<if test="params2 != null">
		params2 = #{params2,jdbcType=VARCHAR},
		</if>
		<if test="params3 != null">
		params3 = #{params3,jdbcType=VARCHAR},
		</if>
		<if test="msg != null">
		msg = #{msg,jdbcType=VARCHAR},
		</if>
		</set>
		WHERE
		ev_id = #{evId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TRAINEE_EMPIRICAL_VALUE_LOG WHERE
		ev_id =
		#{evId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TRAINEE_EMPIRICAL_VALUE_LOG WHERE
		ev_id in
		<foreach item="evId" collection="array" open="("
			separator="," close=")">
#{evId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_TRAINEE_EMPIRICAL_VALUE_LOG WHERE
		ev_id = #{evId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_TRAINEE_EMPIRICAL_VALUE_LOG
        <where>
        		<if test="typeList != null and typeList.size() > 0">
				and type in 
				    <foreach collection="typeList" item="type" open="(" separator="," close=")">
				        #{type,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="type != null and type.trim() != ''">
                and type =#{type,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="activityId != null and activityId.trim() != ''">
                and activity_id =#{activityId,jdbcType=VARCHAR}            </if>
                <if test="ctId != null and ctId.trim() != ''">
                and ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="empiricalValue != null and empiricalValue != ''">
                and empirical_value =#{empiricalValue,jdbcType=INTEGER}            </if>
                <if test="state != null and state.trim() != ''">
                and state =#{state,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="params1 != null and params1.trim() != ''">
                and params1 =#{params1,jdbcType=VARCHAR}            </if>
                <if test="params2 != null and params2.trim() != ''">
                and params2 =#{params2,jdbcType=VARCHAR}            </if>
                <if test="params3 != null and params3.trim() != ''">
                and params3 =#{params3,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by ev_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select * from T_EVGL_TRAINEE_EMPIRICAL_VALUE_LOG t1
        <where>
        		<if test="typeList != null and typeList.size() > 0">
				and t1.type in 
				    <foreach collection="typeList" item="type" open="(" separator="," close=")">
				        #{type,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="type != null and type.trim() != ''">
                and t1.type =#{type,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="activityId != null and activityId.trim() != ''">
                and t1.activity_id =#{activityId,jdbcType=VARCHAR}            </if>
                <if test="empiricalValue != null and empiricalValue != ''">
                and t1.empirical_value =#{empiricalValue,jdbcType=INTEGER}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="params1 != null and params1.trim() != ''">
                and t1.params1 =#{params1,jdbcType=VARCHAR}            </if>
                <if test="params2 != null and params2.trim() != ''">
                and t1.params2 =#{params2,jdbcType=VARCHAR}            </if>
                <if test="params3 != null and params3.trim() != ''">
                and t1.params3 =#{params3,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.ev_id  desc
            </otherwise>
        </choose>
    </select>
    <!-- 批量新增 -->
    <insert id="insertBatch" parameterType="java.util.List">
    	insert into T_EVGL_TRAINEE_empirical_value_LOG
    		(ev_id, type, trainee_id, activity_id, empirical_value, state, create_time, ct_id, msg)
    	values
    	<foreach collection="list" item="obj" separator=",">
    		(
    		#{obj.evId}, #{obj.type}, #{obj.traineeId}, #{obj.activityId}, #{obj.empiricalValue}, #{obj.state},
            #{obj.createTime}, #{obj.ctId}, #{obj.msg}
    		)
    	</foreach>
    </insert>
    
    <!-- 计算经验值 -->
    <select id="sumEmpiricalValueByMap" resultType="java.lang.Integer"
        parameterType="map">
        select ifnull(sum(t1.empirical_value), 0) from T_EVGL_TRAINEE_EMPIRICAL_VALUE_LOG t1
        <where>
                <if test="type != null and type.trim() != ''">
                and t1.type =#{type,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="ctId != null and ctId.trim() != ''">
                and ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="activityId != null and activityId.trim() != ''">
                and t1.activity_id =#{activityId,jdbcType=VARCHAR}            </if>
                <if test="empiricalValue != null and empiricalValue != ''">
                and t1.empirical_value =#{empiricalValue,jdbcType=INTEGER}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="params1 != null and params1.trim() != ''">
                and t1.params1 =#{params1,jdbcType=VARCHAR}            </if>
                <if test="params2 != null and params2.trim() != ''">
                and t1.params2 =#{params2,jdbcType=VARCHAR}            </if>
                <if test="params3 != null and params3.trim() != ''">
                and t1.params3 =#{params3,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.ev_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectSimpleListMapByMap" resultType="map"
        parameterType="map">
        select t1.ev_id as evId, t1.trainee_id as traineeId, t1.type, t1.msg,
        t1.ct_id as ctId, t1.activity_id as activityId, t1.empirical_value as empiricalValue, 
        t1.create_time as createTime, t1.params1, t1.params2, t2.name,
		case t1.type 
			when '1' then (select activity_title from t_evgl_activity_vote_questionnaire where activity_id = t1.activity_id)
			when '2' then (select activity_title from t_evgl_activity_brainstorming where activity_id = t1.activity_id)
			when '3' then (select activity_title from t_evgl_activity_answer_discuss where activity_id = t1.activity_id)
			when '4' then (select paper_name from t_ep_examine_paper_info where paper_id = t1.activity_id)
			when '6' then (select answer_title from t_evgl_tch_room_pere_answer where answer_id = t1.activity_id)
			when '8' then (select activity_title from t_evgl_activity_signin_info where activity_id = t1.activity_id)
			else ''
			end as activtityTitle
        from T_EVGL_TRAINEE_EMPIRICAL_VALUE_LOG t1
		left join t_evgl_tch_classroom t2 on t1.ct_id = t2.ct_id
        <where>
                <if test="type != null and type.trim() != ''">
                and t1.type =#{type,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="activityId != null and activityId.trim() != ''">
                and t1.activity_id =#{activityId,jdbcType=VARCHAR}            </if>
                <if test="empiricalValue != null and empiricalValue != ''">
                and t1.empirical_value =#{empiricalValue,jdbcType=INTEGER}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="params1 != null and params1.trim() != ''">
                and t1.params1 =#{params1,jdbcType=VARCHAR}            </if>
                <if test="params2 != null and params2.trim() != ''">
                and t1.params2 =#{params2,jdbcType=VARCHAR}            </if>
                <if test="params3 != null and params3.trim() != ''">
                and t1.params3 =#{params3,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.create_time  desc
            </otherwise>
        </choose>
    </select>
    
    <update id="updateBatchByCaseWhen" parameterType="java.util.List">
        UPDATE t_evgl_trainee_empirical_value_log
        set
        empirical_value = case ev_id
        <foreach collection="list" item="item" open="" separator="" close="">
            when #{item.evId} then #{item.empiricalValue}
        </foreach>
        end,
        msg = case ev_id
        <foreach collection="list" item="item" open="" separator="" close="">
            when #{item.evId} then #{item.msg}
        </foreach>
        end,
        params2 = case ev_id
        <foreach collection="list" item="item" open="" separator="" close="">
            when #{item.evId} then #{item.params2}
        </foreach>
        end
        where ev_id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.evId}
        </foreach>
    </update>
</mapper>

