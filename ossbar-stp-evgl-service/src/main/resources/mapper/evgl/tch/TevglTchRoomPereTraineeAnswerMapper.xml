<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.tch.persistence.TevglTchRoomPereTraineeAnswerMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.tch.domain.TevglTchRoomPereTraineeAnswer">
		<result column="trainee_answer_id" jdbcType="VARCHAR"
			property="traineeAnswerId" />
		<result column="ct_id" jdbcType="VARCHAR"
			property="ctId" />
		<result column="trainee_id" jdbcType="VARCHAR"
			property="traineeId" />
		<result column="anser_id" jdbcType="VARCHAR"
			property="anserId" />
		<result column="trainee_empirical_value" jdbcType="INTEGER"
			property="traineeEmpiricalValue" />
		<result column="create_user_id" jdbcType="VARCHAR"
			property="createUserId" />
		<result column="create_time" jdbcType="VARCHAR"
			property="createTime" />
		<result column="update_user_id" jdbcType="VARCHAR"
			property="updateUserId" />
		<result column="update_time" jdbcType="VARCHAR"
			property="updateTime" />
		<result column="sort_num" jdbcType="INTEGER"
			property="sortNum" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		trainee_answer_id,ct_id,trainee_id,anser_id,trainee_empirical_value,create_user_id,create_time,update_user_id,update_time,sort_num
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.tch.domain.TevglTchRoomPereTraineeAnswer">
		INSERT INTO T_EVGL_TCH_ROOM_PERE_TRAINEE_ANSWER (
		trainee_answer_id ,
		ct_id ,
		trainee_id ,
		anser_id ,
		trainee_empirical_value ,
		create_user_id ,
		create_time ,
		update_user_id ,
		update_time ,
		sort_num 
		) VALUES (

#{traineeAnswerId,jdbcType=VARCHAR} ,

#{ctId,jdbcType=VARCHAR} ,

#{traineeId,jdbcType=VARCHAR} ,

#{anserId,jdbcType=VARCHAR} ,

#{traineeEmpiricalValue,jdbcType=INTEGER} ,

#{createUserId,jdbcType=VARCHAR} ,

#{createTime,jdbcType=VARCHAR} ,

#{updateUserId,jdbcType=VARCHAR} ,

#{updateTime,jdbcType=VARCHAR} ,

#{sortNum,jdbcType=INTEGER} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.tch.domain.TevglTchRoomPereTraineeAnswer">
		UPDATE T_EVGL_TCH_ROOM_PERE_TRAINEE_ANSWER 
		<set>
		<if test="ctId != null">
		ct_id = #{ctId,jdbcType=VARCHAR},
		</if>
		<if test="traineeId != null">
		trainee_id = #{traineeId,jdbcType=VARCHAR},
		</if>
		<if test="anserId != null">
		anser_id = #{anserId,jdbcType=VARCHAR},
		</if>
		<if test="traineeEmpiricalValue != null">
		trainee_empirical_value = #{traineeEmpiricalValue,jdbcType=INTEGER},
		</if>
		<if test="createUserId != null">
		create_user_id = #{createUserId,jdbcType=VARCHAR},
		</if>
		<if test="createTime != null">
		create_time = #{createTime,jdbcType=VARCHAR},
		</if>
		<if test="updateUserId != null">
		update_user_id = #{updateUserId,jdbcType=VARCHAR},
		</if>
		<if test="updateTime != null">
		update_time = #{updateTime,jdbcType=VARCHAR},
		</if>
		<if test="sortNum != null">
		sort_num = #{sortNum,jdbcType=INTEGER},
		</if>
		</set>
		WHERE
		trainee_answer_id = #{traineeAnswerId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TCH_ROOM_PERE_TRAINEE_ANSWER WHERE
		trainee_answer_id =
		#{traineeAnswerId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TCH_ROOM_PERE_TRAINEE_ANSWER WHERE
		trainee_answer_id in
		<foreach item="traineeAnswerId" collection="array" open="("
			separator="," close=")">
#{traineeAnswerId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_TCH_ROOM_PERE_TRAINEE_ANSWER WHERE
		trainee_answer_id = #{traineeAnswerId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_TCH_ROOM_PERE_TRAINEE_ANSWER
        <where>
        		<if test="activityIds != null and activityIds.size() > 0">
				and anser_id in 
				    <foreach collection="activityIds" item="activityId" open="(" separator="," close=")">
				        #{activityId,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="ctId != null and ctId.trim() != ''">
                and ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="activityId != null and activityId.trim() != ''">
                and anser_id =#{activityId,jdbcType=VARCHAR}            </if>
                <if test="traineeEmpiricalValue != null and traineeEmpiricalValue != ''">
                and trainee_empirical_value =#{traineeEmpiricalValue,jdbcType=INTEGER}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="updateUserId != null and updateUserId.trim() != ''">
                and update_user_id =#{updateUserId,jdbcType=VARCHAR}            </if>
                <if test="updateTime != null and updateTime.trim() != ''">
                and update_time =#{updateTime,jdbcType=VARCHAR}            </if>
                <if test="sortNum != null and sortNum != ''">
                and sort_num =#{sortNum,jdbcType=INTEGER}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by trainee_answer_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select * from T_EVGL_TCH_ROOM_PERE_TRAINEE_ANSWER t1
        <where>
        		<if test="activityIds != null and activityIds.size() > 0">
				and t1.anser_id in 
				    <foreach collection="activityIds" item="activityId" open="(" separator="," close=")">
				        #{activityId,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="anserId != null and anserId.trim() != ''">
                and t1.anser_id =#{anserId,jdbcType=VARCHAR}            </if>
                <if test="traineeEmpiricalValue != null and traineeEmpiricalValue != ''">
                and t1.trainee_empirical_value =#{traineeEmpiricalValue,jdbcType=INTEGER}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and t1.create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="updateUserId != null and updateUserId.trim() != ''">
                and t1.update_user_id =#{updateUserId,jdbcType=VARCHAR}            </if>
                <if test="updateTime != null and updateTime.trim() != ''">
                and t1.update_time =#{updateTime,jdbcType=VARCHAR}            </if>
                <if test="sortNum != null and sortNum != ''">
                and t1.sort_num =#{sortNum,jdbcType=INTEGER}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.trainee_answer_id  desc
            </otherwise>
        </choose>
    </select>
    
    <insert id="batchInsert" parameterType="map">
    	INSERT INTO T_EVGL_TCH_ROOM_PERE_TRAINEE_ANSWER (
			trainee_answer_id ,
			ct_id ,
			trainee_id ,
			anser_id ,
			trainee_empirical_value ,
			create_user_id ,
			create_time ,
			update_user_id ,
			update_time ,
			sort_num 
		) VALUES
		<foreach collection="list" item="answer" separator=",">
			(
			<if test="answer.traineeAnswerId != null">
				#{answer.traineeAnswerId,jdbcType=VARCHAR} ,
			</if>
			<if test="answer.traineeAnswerId != null">
				#{answer.ctId,jdbcType=VARCHAR} ,
			</if>
			<if test="answer.traineeAnswerId != null">
				#{answer.traineeId,jdbcType=VARCHAR} ,
			</if>
			<if test="answer.traineeAnswerId != null">
				#{answer.anserId,jdbcType=VARCHAR} ,
			</if>
			<if test="answer.traineeAnswerId != null">
				#{answer.traineeEmpiricalValue,jdbcType=INTEGER} ,
			</if>
			<if test="answer.traineeAnswerId != null">
				#{answer.createUserId,jdbcType=VARCHAR} ,
			</if>
			<if test="answer.traineeAnswerId != null">
				#{answer.createTime,jdbcType=VARCHAR} ,
			</if>
			<if test="answer.traineeAnswerId != null">
				#{answer.updateUserId,jdbcType=VARCHAR} ,
			</if>
			<if test="answer.traineeAnswerId != null">
				#{answer.updateTime,jdbcType=VARCHAR} ,
			</if>
			<if test="answer.traineeAnswerId != null">
				#{answer.sortNum,jdbcType=INTEGER} 
			</if>
			)
		</foreach>
    </insert>
    
    <!-- 根据课堂id和活动id查询抢答人数 -->
    <select id="selectAnswerNum" resultMap="BaseResultMap"
        parameterType="map">
    	SELECT
			trainee_id, anser_id as answerId, count( * ) AS answerNum
		FROM
			t_evgl_tch_room_pere_trainee_answer 
		<where>
            <if test="ctId != null and ctId.trim() != ''">
            and ct_id =#{ctId,jdbcType=VARCHAR}            
            </if>
            <if test="activityId != null and activityId.trim() != ''">
            and anser_id =#{activityId,jdbcType=VARCHAR}            
            </if>
            <if test="anserIds != null and anserIds.size() > 0">
            and anser_id in
            	<foreach collection="anserIds" item="anserId" open="(" separator="," close=")">
            		#{anserId,jdbcType=VARCHAR}    
            	</foreach>        
            </if>
        </where>
        group by trainee_id
    </select>
    
    <!-- 根据课堂id和活动id查询抢答结果 -->
    <select id="answerSummaryResults" resultType="string"
        parameterType="map">
    	SELECT
			t1.trainee_id , t1.trainee_empirical_value as empiricalValue
		FROM
			t_evgl_tch_room_pere_trainee_answer t1
			LEFT JOIN t_evgl_tch_room_pere_answer t2 ON t1.anser_id = t2.answer_id
		<where>
            <if test="ctId != null and ctId.trim() != ''">
            and t1.ct_id =#{ctId,jdbcType=VARCHAR}            
            </if>
            <if test="activityId != null and activityId.trim() != ''">
            and t1.anser_id =#{activityId,jdbcType=VARCHAR}            
            </if>
        </where>
    </select>
    
    <!-- 根据课堂id和活动id查询活动的抢答人数 -->
    <select id="queryAnswerNum" resultType="map" parameterType="map">
    	SELECT
			ct_id as ctId,
			trainee_id as traineeId,
			anser_id as anserId,
			trainee_empirical_value as empiricalValue,
			count( trainee_id ) AS answerNum 
		FROM
			t_evgl_tch_room_pere_trainee_answer 
		<where>
            <if test="ctId != null and ctId.trim() != ''">
            and ct_id =#{ctId,jdbcType=VARCHAR}            
            </if>
            <if test="activityId != null and activityId.trim() != ''">
            and anser_id =#{activityId,jdbcType=VARCHAR}            
            </if>
            <if test="anserIds != null and anserIds.size() > 0">
            and anser_id in
            	<foreach collection="anserIds" item="anserId" open="(" separator="," close=")">
            		#{anserId,jdbcType=VARCHAR}    
            	</foreach>        
            </if>
        </where>
		GROUP BY
			anser_id
    </select>
    
    <select id="selectTraineeIdList" parameterType="string" resultType="string">
		SELECT distinct t1.trainee_id FROM t_evgl_tch_room_pere_trainee_answer t1 where t1.ct_id = #{ctId} and t1.anser_id = #{activityId}
	</select>

	<select id="countSuccessPersonNum" parameterType="string" resultType="integer">
		SELECT count(trainee_id) FROM t_evgl_tch_room_pere_trainee_answer t1 where t1.ct_id = #{ctId} and t1.anser_id = #{activityId}
	</select>

	<select id="countTraineeAnswer" parameterType="string" resultType="integer">
		SELECT count(anser_id) FROM t_evgl_tch_room_pere_trainee_answer t1 where t1.ct_id = #{ctId} and t1.anser_id = #{activityId} and t1.trainee_id = #{traineeId}
	</select>
	
	<update id="updateBatchByCaseWhen" parameterType="java.util.List">
		UPDATE t_evgl_tch_room_pere_trainee_answer
		SET trainee_empirical_value = CASE trainee_answer_id
		<foreach collection="list" item="item" open="" separator="" close="">
			WHEN #{item.traineeAnswerId} THEN #{item.traineeEmpiricalValue}
		</foreach>
		END,
		update_user_id = case trainee_answer_id
		<foreach collection="list" item="item" open="" separator="" close="">
			WHEN #{item.traineeAnswerId} THEN #{item.updateUserId}
		</foreach>
		END,
		update_time = case trainee_answer_id
		<foreach collection="list" item="item" open="" separator="" close="">
			WHEN #{item.traineeAnswerId} THEN #{item.updateTime}
		</foreach>
		END
		WHERE trainee_answer_id IN
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item.traineeAnswerId}
		</foreach>
	</update>
</mapper>

