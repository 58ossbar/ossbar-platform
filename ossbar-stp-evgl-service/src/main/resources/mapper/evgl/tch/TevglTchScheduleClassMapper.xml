<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.tch.persistence.TevglTchScheduleClassMapper">
	<resultMap id="BaseResultMap" type="com.ossbar.modules.evgl.tch.domain.TevglTchScheduleClass">
		<result column="schedule_id" jdbcType="VARCHAR" property="scheduleId" />
		<result column="class_id" jdbcType="VARCHAR" property="classId" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		schedule_id,class_id
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.tch.domain.TevglTchScheduleClass">
		INSERT INTO T_EVGL_TCH_SCHEDULE_CLASS (
		schedule_id ,
		class_id
		) VALUES (

#{scheduleId,jdbcType=VARCHAR} ,

#{classId,jdbcType=VARCHAR}
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.tch.domain.TevglTchScheduleClass">
		UPDATE T_EVGL_TCH_SCHEDULE_CLASS
		<set>
			<if test="scheduleId != null">
				schedule_id = #{scheduleId,jdbcType=VARCHAR},
			</if>
			<if test="classId != null">
				class_id = #{classId,jdbcType=VARCHAR},
			</if>
		</set>
		WHERE
		schedule_id = #{scheduleId,jdbcType=VARCHAR}
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TCH_SCHEDULE_CLASS WHERE
		schedule_id =
		#{scheduleId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TCH_SCHEDULE_CLASS WHERE
		schedule_id in
		<foreach item="scheduleId" collection="array" open="("
				 separator="," close=")">
			#{scheduleId,jdbcType=VARCHAR}
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
			resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_TCH_SCHEDULE_CLASS WHERE
		schedule_id = #{scheduleId,jdbcType=VARCHAR}
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
	<select id="selectListByMap" resultMap="BaseResultMap"
			parameterType="map">
		select * from T_EVGL_TCH_SCHEDULE_CLASS
		<where>
			<if test="scheduleId != null and scheduleId.trim() != ''">
				and schedule_id =#{scheduleId,jdbcType=VARCHAR}            </if>
			<if test="classId != null and classId.trim() != ''">
				and class_id =#{classId,jdbcType=VARCHAR}            </if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by schedule_id  desc
			</otherwise>
		</choose>
	</select>

	<select id="selectListMapByMap" resultType="map"
			parameterType="map">
		select * from T_EVGL_TCH_SCHEDULE_CLASS t1
		<where>
			<if test="scheduleId != null and scheduleId.trim() != ''">
				and t1.schedule_id =#{scheduleId,jdbcType=VARCHAR}            </if>
			<if test="classId != null and classId.trim() != ''">
				and t1.class_id =#{classId,jdbcType=VARCHAR}            </if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by t1.schedule_id  desc
			</otherwise>
		</choose>
	</select>

	<select id="findMyClassList" parameterType="java.lang.String" resultType="map">
		select t1.class_id as classId, t2.class_name as className from t_evgl_tch_schedule_class t1
		inner join t_evgl_tch_class t2 on t1.class_id = t2.class_id
		where t1.schedule_id in (select schedule_id from t_evgl_tch_schedule where teacher_id = #{traineeId})
		GROUP BY t1.class_id
		ORDER BY t2.create_time desc
	</select>
	
	<select id="findMyJoinedClassList" parameterType="java.lang.String" resultType="map">
		select t1.class_id as classId, t1.class_name as className from t_evgl_tch_class t1
		where t1.class_id in (select class_id from t_evgl_tch_classtrainee where trainee_id = #{traineeId})
		group by t1.class_id
		order by t1.class_name
	</select>

	<select id="findMyTeacherListByClassId" parameterType="java.lang.String" resultType="map">
		select t1.teacher_id as teacherId, t2.trainee_id as traineeId, t2.teacher_name as teacherName, t3.trainee_name as traineeName, t3.nick_name as nickName
		from t_evgl_tch_schedule t1
		inner join t_evgl_tch_teacher t2 on t1.teacher_id = t2.trainee_id
		left join t_evgl_trainee_info t3 on t2.trainee_id = t3.trainee_id
		where t1.schedule_id in (select schedule_id from t_evgl_tch_schedule_class where class_id = #{classId})
		group by t1.teacher_id
	</select>
</mapper>

