<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.tch.persistence.TevglTchScheduleMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.tch.domain.TevglTchSchedule">
		<result column="schedule_id" jdbcType="VARCHAR"
			property="scheduleId" />
		<result column="state" jdbcType="VARCHAR"
			property="state" />
		<result column="teacher_id" jdbcType="VARCHAR"
			property="teacherId" />
		<result column="subject_id" jdbcType="VARCHAR"
			property="subjectId" />
		<result column="room_id" jdbcType="VARCHAR"
			property="roomId" />
		<result column="time_quantum_id" jdbcType="VARCHAR"
			property="timeQuantumId" />
		<result column="schedule" jdbcType="VARCHAR"
			property="schedule" />
		<result column="schedule_state" jdbcType="VARCHAR"
			property="scheduleState" />
		<result column="create_user_id" jdbcType="VARCHAR"
			property="createUserId" />
		<result column="create_time" jdbcType="VARCHAR"
			property="createTime" />
		<result column="update_user_id" jdbcType="VARCHAR"
			property="updateUserId" />
		<result column="update_time" jdbcType="VARCHAR"
			property="updateTime" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		schedule_id,state,teacher_id,subject_id,room_id,time_quantum_id,schedule,schedule_state,create_user_id,create_time,update_user_id,update_time
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.tch.domain.TevglTchSchedule">
		INSERT INTO T_EVGL_TCH_SCHEDULE (
		schedule_id ,
		state ,
		teacher_id ,
		subject_id ,
		room_id ,
		time_quantum_id ,
		schedule ,
		schedule_state ,
		create_user_id ,
		create_time ,
		update_user_id ,
		update_time 
		) VALUES (

#{scheduleId,jdbcType=VARCHAR} ,

#{state,jdbcType=VARCHAR} ,

#{teacherId,jdbcType=VARCHAR} ,

#{subjectId,jdbcType=VARCHAR} ,

#{roomId,jdbcType=VARCHAR} ,

#{timeQuantumId,jdbcType=VARCHAR} ,

#{schedule,jdbcType=VARCHAR} ,

#{scheduleState,jdbcType=VARCHAR} ,

#{createUserId,jdbcType=VARCHAR} ,

#{createTime,jdbcType=VARCHAR} ,

#{updateUserId,jdbcType=VARCHAR} ,

#{updateTime,jdbcType=VARCHAR} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.tch.domain.TevglTchSchedule">
		UPDATE T_EVGL_TCH_SCHEDULE 
		<set>
		<if test="state != null">
		state = #{state,jdbcType=VARCHAR},
		</if>
		<if test="teacherId != null">
		teacher_id = #{teacherId,jdbcType=VARCHAR},
		</if>
		<if test="subjectId != null">
		subject_id = #{subjectId,jdbcType=VARCHAR},
		</if>
		<if test="roomId != null">
		room_id = #{roomId,jdbcType=VARCHAR},
		</if>
		<if test="timeQuantumId != null">
		time_quantum_id = #{timeQuantumId,jdbcType=VARCHAR},
		</if>
		<if test="schedule != null">
		schedule = #{schedule,jdbcType=VARCHAR},
		</if>
		<if test="scheduleState != null">
		schedule_state = #{scheduleState,jdbcType=VARCHAR},
		</if>
		<if test="createUserId != null">
		create_user_id = #{createUserId,jdbcType=VARCHAR},
		</if>
		<if test="createTime != null">
		create_time = #{createTime,jdbcType=VARCHAR},
		</if>
		<if test="updateUserId != null">
		update_user_id = #{updateUserId,jdbcType=VARCHAR},
		</if>
		<if test="updateTime != null">
		update_time = #{updateTime,jdbcType=VARCHAR},
		</if>
		</set>
		WHERE
		schedule_id = #{scheduleId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TCH_SCHEDULE WHERE
		schedule_id =
		#{scheduleId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TCH_SCHEDULE WHERE
		schedule_id in
		<foreach item="scheduleId" collection="array" open="("
			separator="," close=")">
#{scheduleId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_TCH_SCHEDULE WHERE
		schedule_id = #{scheduleId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_TCH_SCHEDULE
        <where>
                <if test="state != null and state.trim() != ''">
                and state =#{state,jdbcType=VARCHAR}            </if>
                <if test="teacherId != null and teacherId.trim() != ''">
                and teacher_id =#{teacherId,jdbcType=VARCHAR}            </if>
                <if test="subjectId != null and subjectId.trim() != ''">
                and subject_id =#{subjectId,jdbcType=VARCHAR}            </if>
                <if test="roomId != null and roomId.trim() != ''">
                and room_id =#{roomId,jdbcType=VARCHAR}            </if>
                <if test="timeQuantumId != null and timeQuantumId.trim() != ''">
                and time_quantum_id =#{timeQuantumId,jdbcType=VARCHAR}            </if>
                <if test="schedule != null and schedule.trim() != ''">
                and schedule =#{schedule,jdbcType=VARCHAR}            </if>
                <if test="scheduleState != null and scheduleState.trim() != ''">
                and schedule_state =#{scheduleState,jdbcType=VARCHAR}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="updateUserId != null and updateUserId.trim() != ''">
                and update_user_id =#{updateUserId,jdbcType=VARCHAR}            </if>
                <if test="updateTime != null and updateTime.trim() != ''">
                and update_time =#{updateTime,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by schedule_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select * from T_EVGL_TCH_SCHEDULE t1
        <where>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="teacherId != null and teacherId.trim() != ''">
                and t1.teacher_id =#{teacherId,jdbcType=VARCHAR}            </if>
                <if test="subjectId != null and subjectId.trim() != ''">
                and t1.subject_id =#{subjectId,jdbcType=VARCHAR}            </if>
                <if test="roomId != null and roomId.trim() != ''">
                and t1.room_id =#{roomId,jdbcType=VARCHAR}            </if>
                <if test="timeQuantumId != null and timeQuantumId.trim() != ''">
                and t1.time_quantum_id =#{timeQuantumId,jdbcType=VARCHAR}            </if>
                <if test="schedule != null and schedule.trim() != ''">
                and t1.schedule =#{schedule,jdbcType=VARCHAR}            </if>
                <if test="scheduleState != null and scheduleState.trim() != ''">
                and t1.schedule_state =#{scheduleState,jdbcType=VARCHAR}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and t1.create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="updateUserId != null and updateUserId.trim() != ''">
                and t1.update_user_id =#{updateUserId,jdbcType=VARCHAR}            </if>
                <if test="updateTime != null and updateTime.trim() != ''">
                and t1.update_time =#{updateTime,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.schedule_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="queryScheduleData" parameterType="map" resultType="com.ossbar.modules.evgl.tch.domain.TevglTchSchedule" >
		select
		GROUP_CONCAT(tx.class_name) as class_name, GROUP_CONCAT(tx.class_id) as class_id,
		t5.room_name, t2.begin_time, t2.end_time, t4.teacher_name,  t6.subject_name,
		t1.*, t1.schedule_state as scheduleStateName, t2.sort_num
		from T_EVGL_TCH_SCHEDULE t1
		inner join t_evgl_tch_schedule_between t2 on t1.time_quantum_id = t2.time_quantum_id
		left join t_evgl_tch_teacher t4 on t1.teacher_id = t4.trainee_id
		left join t_evgl_tch_schedule_training_room t5 on t1.room_id = t5.room_id
		left join t_evgl_book_subject t6 on t1.subject_id = t6.subject_id
		left join (
			select sc.schedule_id, cls.class_id, cls.class_name from t_evgl_tch_schedule_class sc left join t_evgl_tch_class cls on sc.class_id = cls.class_id
		) tx on tx.schedule_id = t1.schedule_id
		<where>
			t1.state = 'Y'
			<if test="scheduleList != null and scheduleList.size() > 0">
				and t1.schedule in 
				<foreach collection="scheduleList" item="schedule" open="(" separator="," close=")">
					#{schedule}
				</foreach>
			</if>
			<if test="classId != null and classId.trim() != ''">
				and FIND_IN_SET(#{classId,jdbcType=VARCHAR}, tx.class_id)
			</if>
			<if test="classIdArray != null">
				and tx.class_id in 
				<foreach collection="classIdArray" item="classId" open="(" separator="," close=")">#{classId}</foreach>
			</if>
			<if test="beginDate != null and beginDate.trim() != ''">
				and t1.schedule &gt;= #{beginDate}
			</if>
			<if test="endDate != null and endDate.trim() != ''">
				and t1.schedule &lt;= #{endDate}
			</if>
			<if test="teacherId != null and teacherId.trim() != ''">
				and t1.teacher_id =#{teacherId,jdbcType=VARCHAR}            </if>
			<if test="subjectId != null and subjectId.trim() != ''">
				and t1.subject_id =#{subjectId,jdbcType=VARCHAR}            </if>
			<if test="roomId != null and roomId.trim() != ''">
				and t1.room_id =#{roomId,jdbcType=VARCHAR}            </if>
			<if test="timeQuantumId != null and timeQuantumId.trim() != ''">
				and t1.time_quantum_id =#{timeQuantumId,jdbcType=VARCHAR}            </if>
			<if test="schedule != null and schedule.trim() != ''">
				and t1.schedule =#{schedule,jdbcType=VARCHAR}            </if>
			<if test="scheduleState != null and scheduleState.trim() != ''">
				and t1.schedule_state =#{scheduleState,jdbcType=VARCHAR}            </if>
			<if test="createUserId != null and createUserId.trim() != ''">
				and t1.create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
			<if test="createTime != null and createTime.trim() != ''">
				and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
			<if test="updateUserId != null and updateUserId.trim() != ''">
				and t1.update_user_id =#{updateUserId,jdbcType=VARCHAR}            </if>
			<if test="updateTime != null and updateTime.trim() != ''">
				and t1.update_time =#{updateTime,jdbcType=VARCHAR}            </if>
		</where>
		group by t1.schedule_id
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by t1.`schedule` asc, t2.sort_num asc
			</otherwise>
		</choose>
	</select>
	
	<insert id="insertBatch" parameterType="java.util.List">
		insert into t_evgl_tch_schedule (
			schedule_id, state, teacher_id, subject_id, room_id,
			time_quantum_id, schedule, schedule_state, create_user_id, create_time
		)
		values
		<foreach collection="list" item="obj" separator=",">
			(
			#{obj.scheduleId}, #{obj.state}, #{obj.teacherId}, #{obj.subjectId}, #{obj.roomId},
			#{obj.timeQuantumId}, #{obj.schedule}, #{obj.scheduleState}, #{obj.createUserId}, #{obj.createTime}
			)
		</foreach>
	</insert>
	
	<insert id="insertBatchScheduleClass" parameterType="java.util.List">
		insert into t_evgl_tch_schedule_class ( schedule_id, class_id )
		values
		<foreach collection="list" item="obj" separator=",">
			( #{obj.scheduleId}, #{obj.classId} )
		</foreach>
	</insert>
	
	<select id="queryScheduleDataForWeb" parameterType="com.ossbar.modules.evgl.tch.params.TevglTchScheduleParams" resultType="com.ossbar.modules.evgl.tch.domain.TevglTchSchedule" >
		select
		GROUP_CONCAT(tx.class_name) as class_name, GROUP_CONCAT(tx.class_id) as class_id,
		t5.room_name, t2.begin_time, t2.end_time, t4.teacher_name,  t6.subject_name,
		t1.*, t1.schedule_state as scheduleStateName, t2.sort_num
		from T_EVGL_TCH_SCHEDULE t1
		inner join t_evgl_tch_schedule_between t2 on t1.time_quantum_id = t2.time_quantum_id
		left join t_evgl_tch_teacher t4 on t1.teacher_id = t4.trainee_id
		left join t_evgl_tch_schedule_training_room t5 on t1.room_id = t5.room_id
		left join t_evgl_book_subject t6 on t1.subject_id = t6.subject_id
		left join (
			select sc.schedule_id, cls.class_id, cls.class_name from t_evgl_tch_schedule_class sc left join t_evgl_tch_class cls on sc.class_id = cls.class_id
		) tx on tx.schedule_id = t1.schedule_id
		<where>
			t1.state = 'Y'
			<if test="classId != null and classId.trim() != ''">
				and FIND_IN_SET(#{classId,jdbcType=VARCHAR}, tx.class_id)
			</if>
			<if test="beginDate != null and beginDate.trim() != ''">
				and t1.schedule &gt;= #{beginDate}
			</if>
			<if test="endDate != null and endDate.trim() != ''">
				and t1.schedule &lt;= #{endDate}
			</if>
			<if test="teacherId != null and teacherId.trim() != ''">
				and t1.teacher_id =#{teacherId,jdbcType=VARCHAR}            </if>
			<if test="subjectId != null and subjectId.trim() != ''">
				and t1.subject_id =#{subjectId,jdbcType=VARCHAR}            </if>
			<if test="roomId != null and roomId.trim() != ''">
				and t1.room_id =#{roomId,jdbcType=VARCHAR}            </if>
			<if test="scheduleState != null and scheduleState.trim() != ''">
				and t1.schedule_state =#{scheduleState,jdbcType=VARCHAR}            </if>
		</where>
		group by t1.schedule_id
		order by t1.`schedule` asc, t2.sort_num asc
	</select>
	
	<delete id="deleteScheduleClass" parameterType="java.lang.String">
		DELETE FROM t_evgl_tch_schedule_class WHERE schedule_id = #{scheduleId,jdbcType=VARCHAR} 
	</delete>
	
	<select id="queryTrainingRoomList" parameterType="map" resultType="map" >
		select room_id as roomId, room_name as roomName from t_evgl_tch_schedule_training_room order by room_name asc
	</select>
</mapper>

