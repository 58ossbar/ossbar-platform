<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.empirical.persistence.TevglEmpiricalTypeMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.empirical.domain.TevglEmpiricalType">
		<result column="type_id" jdbcType="VARCHAR"
			property="typeId" />
		<result column="ct_id" jdbcType="VARCHAR"
			property="ctId" />
		<result column="dict_code" jdbcType="VARCHAR"
			property="dictCode" />
		<result column="name" jdbcType="VARCHAR"
			property="name" />
		<result column="weight" jdbcType="DECIMAL"
			property="weight" />
		<result column="create_time" jdbcType="VARCHAR"
			property="createTime" />
		<result column="create_user_id" jdbcType="VARCHAR"
			property="createUserId" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		type_id,ct_id,dict_code,name,weight,create_time,create_user_id
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.empirical.domain.TevglEmpiricalType">
		INSERT INTO T_EVGL_EMPIRICAL_TYPE (
		type_id ,
		ct_id ,
		dict_code ,
		name ,
		weight ,
		create_time ,
		create_user_id 
		) VALUES (

#{typeId,jdbcType=VARCHAR} ,

#{ctId,jdbcType=VARCHAR} ,

#{dictCode,jdbcType=VARCHAR} ,

#{name,jdbcType=VARCHAR} ,

#{weight,jdbcType=DECIMAL} ,

#{createTime,jdbcType=VARCHAR} ,

#{createUserId,jdbcType=VARCHAR} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.empirical.domain.TevglEmpiricalType">
		UPDATE T_EVGL_EMPIRICAL_TYPE 
		<set>
		<if test="ctId != null">
		ct_id = #{ctId,jdbcType=VARCHAR},
		</if>
		<if test="dictCode != null">
		dict_code = #{dictCode,jdbcType=VARCHAR},
		</if>
		<if test="name != null">
		name = #{name,jdbcType=VARCHAR},
		</if>
		<if test="weight != null">
		weight = #{weight,jdbcType=DECIMAL},
		</if>
		<if test="createTime != null">
		create_time = #{createTime,jdbcType=VARCHAR},
		</if>
		<if test="createUserId != null">
		create_user_id = #{createUserId,jdbcType=VARCHAR},
		</if>
		</set>
		WHERE
		type_id = #{typeId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_EMPIRICAL_TYPE WHERE
		type_id =
		#{typeId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_EMPIRICAL_TYPE WHERE
		type_id in
		<foreach item="typeId" collection="array" open="("
			separator="," close=")">
#{typeId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_EMPIRICAL_TYPE WHERE
		type_id = #{typeId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_EMPIRICAL_TYPE
        <where>
                <if test="ctId != null and ctId.trim() != ''">
                and ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="dictCode != null and dictCode.trim() != ''">
                and dict_code =#{dictCode,jdbcType=VARCHAR}            </if>
                <if test="name != null and name.trim() != ''">
                and name =#{name,jdbcType=VARCHAR}            </if>
                <if test="weight != null and weight != ''">
                and weight =#{weight,jdbcType=DECIMAL}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by type_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select * from T_EVGL_EMPIRICAL_TYPE t1
        <where>
                <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="dictCode != null and dictCode.trim() != ''">
                and t1.dict_code =#{dictCode,jdbcType=VARCHAR}            </if>
                <if test="name != null and name.trim() != ''">
                and t1.name =#{name,jdbcType=VARCHAR}            </if>
                <if test="weight != null and weight != ''">
                and t1.weight =#{weight,jdbcType=DECIMAL}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and t1.create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.type_id  desc
            </otherwise>
        </choose>
    </select>
    
    <insert id="insertBatch" parameterType="java.util.List">
		insert into t_evgl_empirical_type
			(type_id, ct_id, dict_code, name, weight, create_time, create_user_id)
		values
	    <foreach collection="list" item="obj" separator="," >
	    	(
	    		#{obj.typeId}, #{obj.ctId}, #{obj.dictCode}, #{obj.name}, #{obj.weight}
	    		, #{obj.createTime}, #{obj.createUserId}
	    	)
	    </foreach>
	</insert>
</mapper>

