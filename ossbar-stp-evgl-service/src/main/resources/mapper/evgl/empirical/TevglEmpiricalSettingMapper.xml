<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.empirical.persistence.TevglEmpiricalSettingMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.empirical.domain.TevglEmpiricalSetting">
		<result column="st_id" jdbcType="VARCHAR"
			property="stId" />
		<result column="type_id" jdbcType="VARCHAR"
			property="typeId" />
		<result column="ct_id" jdbcType="VARCHAR"
			property="ctId" />
		<result column="dict_code" jdbcType="VARCHAR"
			property="dictCode" />
		<result column="name" jdbcType="VARCHAR"
			property="name" />
		<result column="value" jdbcType="DECIMAL"
			property="value" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		st_id,type_id,ct_id,dict_code,name,value
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.empirical.domain.TevglEmpiricalSetting">
		INSERT INTO T_EVGL_EMPIRICAL_SETTING (
		st_id ,
		type_id ,
		ct_id ,
		dict_code ,
		name ,
		value 
		) VALUES (

#{stId,jdbcType=VARCHAR} ,

#{typeId,jdbcType=VARCHAR} ,

#{ctId,jdbcType=VARCHAR} ,

#{dictCode,jdbcType=VARCHAR} ,

#{name,jdbcType=VARCHAR} ,

#{value,jdbcType=DECIMAL} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.empirical.domain.TevglEmpiricalSetting">
		UPDATE T_EVGL_EMPIRICAL_SETTING 
		<set>
		<if test="typeId != null">
		type_id = #{typeId,jdbcType=VARCHAR},
		</if>
		<if test="ctId != null">
		ct_id = #{ctId,jdbcType=VARCHAR},
		</if>
		<if test="dictCode != null">
		dict_code = #{dictCode,jdbcType=VARCHAR},
		</if>
		<if test="name != null">
		name = #{name,jdbcType=VARCHAR},
		</if>
		<if test="value != null">
		value = #{value,jdbcType=DECIMAL},
		</if>
		</set>
		WHERE
		st_id = #{stId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_EMPIRICAL_SETTING WHERE
		st_id =
		#{stId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_EMPIRICAL_SETTING WHERE
		st_id in
		<foreach item="stId" collection="array" open="("
			separator="," close=")">
#{stId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_EMPIRICAL_SETTING WHERE
		st_id = #{stId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_EMPIRICAL_SETTING
        <where>
                <if test="typeId != null and typeId.trim() != ''">
                and type_id =#{typeId,jdbcType=VARCHAR}            </if>
                <if test="ctId != null and ctId.trim() != ''">
                and ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="dictCode != null and dictCode.trim() != ''">
                and dict_code =#{dictCode,jdbcType=VARCHAR}            </if>
                <if test="name != null and name.trim() != ''">
                and name =#{name,jdbcType=VARCHAR}            </if>
                <if test="value != null and value != ''">
                and value =#{value,jdbcType=DECIMAL}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by st_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select * from T_EVGL_EMPIRICAL_SETTING t1
        <where>
                <if test="typeId != null and typeId.trim() != ''">
                and t1.type_id =#{typeId,jdbcType=VARCHAR}            </if>
                <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="dictCode != null and dictCode.trim() != ''">
                and t1.dict_code =#{dictCode,jdbcType=VARCHAR}            </if>
                <if test="name != null and name.trim() != ''">
                and t1.name =#{name,jdbcType=VARCHAR}            </if>
                <if test="value != null and value != ''">
                and t1.value =#{value,jdbcType=DECIMAL}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.st_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="getEmpiricalValueByMap" resultType="INTEGER" parameterType="map">
        select ifnull(value, 0) from T_EVGL_EMPIRICAL_SETTING t1
        <where>
                <if test="typeId != null and typeId.trim() != ''">
                and t1.type_id =#{typeId,jdbcType=VARCHAR}            </if>
                <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="dictCode != null and dictCode.trim() != ''">
                and t1.dict_code =#{dictCode,jdbcType=VARCHAR}            </if>
                <if test="name != null and name.trim() != ''">
                and t1.name =#{name,jdbcType=VARCHAR}            </if>
                <if test="value != null and value != ''">
                and t1.value =#{value,jdbcType=DECIMAL}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.st_id  desc
            </otherwise>
        </choose>
    </select>
    
    <insert id="insertBatch" parameterType="java.util.List">
		insert into t_evgl_empirical_setting
			(st_id, type_id, ct_id, dict_code, name, value)
		values
	    <foreach collection="list" item="obj" separator="," >
	    	(
	    		#{obj.stId}, #{obj.typeId}, #{obj.ctId}, #{obj.dictCode}, #{obj.name}, #{obj.value}
	    	)
	    </foreach>
	</insert>
</mapper>

