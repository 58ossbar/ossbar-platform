<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.activity.persistence.TevglActivityAnswerDiscussMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.activity.domain.TevglActivityAnswerDiscuss">
		<result column="activity_id" jdbcType="VARCHAR"
			property="activityId" />
		<result column="resgroup_id" jdbcType="VARCHAR"
			property="resgroupId" />
		<result column="activity_title" jdbcType="VARCHAR"
			property="activityTitle" />
		<result column="content" jdbcType="LONGVARCHAR"
			property="content" />
		<result column="activity_pic" jdbcType="LONGVARCHAR"
			property="activityPic" />
		<result column="empirical_value" jdbcType="INTEGER"
			property="empiricalValue" />
		<result column="state" jdbcType="VARCHAR"
			property="state" />
		<result column="activity_state" jdbcType="VARCHAR"
			property="activityState" />
		<result column="sort_num" jdbcType="INTEGER"
			property="sortNum" />
		<result column="create_user_id" jdbcType="VARCHAR"
			property="createUserId" />
		<result column="create_time" jdbcType="VARCHAR"
			property="createTime" />
		<result column="update_user_id" jdbcType="VARCHAR"
			property="updateUserId" />
		<result column="update_time" jdbcType="VARCHAR"
			property="updateTime" />
		<result column="is_allow_pic" jdbcType="VARCHAR"
			property="isAllowPic" />
		<result column="is_allow_voice" jdbcType="VARCHAR"
			property="isAllowVoice" />
		<result column="is_allow_video" jdbcType="VARCHAR"
			property="isAllowVideo" />
		<result column="activity_type" jdbcType="VARCHAR"
			property="activityType" />
		<result column="purpose" jdbcType="VARCHAR"
			property="purpose" />
		<result column="answer_number" jdbcType="INTEGER"
			property="answerNumber" />	
		<result column="chapter_id" jdbcType="VARCHAR"
			property="chapterId" />
		<result column="activity_begin_time" jdbcType="VARCHAR"
			property="activityBeginTime" />
		<result column="activity_end_time" jdbcType="VARCHAR"
			property="activityEndTime" />
		<result column="group_id" jdbcType="VARCHAR"
			property="groupId" />			
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		activity_id,resgroup_id,activity_title,content,activity_pic,empirical_value,state,activity_state,sort_num,create_user_id,create_time,update_user_id,update_time,is_allow_pic,is_allow_voice,is_allow_video,activity_type,purpose,answer_number
		,chapter_id
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.activity.domain.TevglActivityAnswerDiscuss">
		INSERT INTO T_EVGL_ACTIVITY_ANSWER_DISCUSS (
		activity_id ,
		resgroup_id ,
		activity_title ,
		content ,
		activity_pic ,
		empirical_value ,
		state ,
		activity_state ,
		sort_num ,
		create_user_id ,
		create_time ,
		update_user_id ,
		update_time ,
		is_allow_pic ,
		is_allow_voice ,
		is_allow_video ,
		activity_type ,
		purpose ,
		answer_number ,
		chapter_id
		) VALUES (

#{activityId,jdbcType=VARCHAR} ,

#{resgroupId,jdbcType=VARCHAR} ,

#{activityTitle,jdbcType=VARCHAR} ,

#{content,jdbcType=LONGVARCHAR} ,

#{activityPic,jdbcType=LONGVARCHAR} ,

#{empiricalValue,jdbcType=INTEGER} ,

#{state,jdbcType=VARCHAR} ,

#{activityState,jdbcType=VARCHAR} ,

#{sortNum,jdbcType=INTEGER} ,

#{createUserId,jdbcType=VARCHAR} ,

#{createTime,jdbcType=VARCHAR} ,

#{updateUserId,jdbcType=VARCHAR} ,

#{updateTime,jdbcType=VARCHAR} ,

#{isAllowPic,jdbcType=VARCHAR} ,

#{isAllowVoice,jdbcType=VARCHAR} ,

#{isAllowVideo,jdbcType=VARCHAR} ,

#{activityType,jdbcType=VARCHAR} ,

#{purpose,jdbcType=VARCHAR} ,

#{answerNumber,jdbcType=INTEGER} ,

#{chapterId,jdbcType=VARCHAR} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.activity.domain.TevglActivityAnswerDiscuss">
		UPDATE T_EVGL_ACTIVITY_ANSWER_DISCUSS 
		<set>
		<if test="resgroupId != null">
		resgroup_id = #{resgroupId,jdbcType=VARCHAR},
		</if>
		<if test="activityTitle != null">
		activity_title = #{activityTitle,jdbcType=VARCHAR},
		</if>
		<if test="content != null">
		content = #{content,jdbcType=LONGVARCHAR},
		</if>
		<if test="activityPic != null">
		activity_pic = #{activityPic,jdbcType=VARCHAR},
		</if>
		<if test="empiricalValue != null">
		empirical_value = #{empiricalValue,jdbcType=INTEGER},
		</if>
		<if test="state != null">
		state = #{state,jdbcType=VARCHAR},
		</if>
		<if test="activityState != null">
		activity_state = #{activityState,jdbcType=VARCHAR},
		</if>
		<if test="sortNum != null">
		sort_num = #{sortNum,jdbcType=INTEGER},
		</if>
		<if test="createUserId != null">
		create_user_id = #{createUserId,jdbcType=VARCHAR},
		</if>
		<if test="createTime != null">
		create_time = #{createTime,jdbcType=VARCHAR},
		</if>
		<if test="updateUserId != null">
		update_user_id = #{updateUserId,jdbcType=VARCHAR},
		</if>
		<if test="updateTime != null">
		update_time = #{updateTime,jdbcType=VARCHAR},
		</if>
		<if test="isAllowPic != null">
		is_allow_pic = #{isAllowPic,jdbcType=VARCHAR},
		</if>
		<if test="isAllowVoice != null">
		is_allow_voice = #{isAllowVoice,jdbcType=VARCHAR},
		</if>
		<if test="isAllowVideo != null">
		is_allow_video = #{isAllowVideo,jdbcType=VARCHAR},
		</if>
		<if test="activityType != null">
		activity_type = #{activityType,jdbcType=VARCHAR},
		</if>
		<if test="purpose != null">
		purpose = #{purpose,jdbcType=VARCHAR},
		</if>
		<if test="answerNumber != null">
		answer_number = #{answerNumber,jdbcType=INTEGER},
		</if>
		<if test="chapterId != null">
		chapter_id = #{chapterId,jdbcType=VARCHAR},
		</if>
		</set>
		WHERE
		activity_id = #{activityId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_ACTIVITY_ANSWER_DISCUSS WHERE
		activity_id =
		#{activityId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_ACTIVITY_ANSWER_DISCUSS WHERE
		activity_id in
		<foreach item="activityId" collection="array" open="("
			separator="," close=")">
#{activityId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_ACTIVITY_ANSWER_DISCUSS WHERE
		activity_id = #{activityId,jdbcType=VARCHAR} 
	</select>
	<select id="selectObjectMapById" parameterType="java.lang.String"
		resultType="map">
		select relation.activity_state as activityState,
		t1.activity_id as activityId, t1.resgroup_id as resgroupId,
		t1.activity_title as activityTitle, t1.content, t1.activity_pic as activityPic,
		t1.empirical_value as empiricalValue, t1.sort_num as sortNum, t1.is_allow_pic as isAllowPic,
		t1.is_allow_voice as isAllowVoice, t1.is_allow_video as isAllowVideo, t1.purpose, 
		t1.chapter_id as chapterId
		from T_EVGL_ACTIVITY_ANSWER_DISCUSS t1
		inner join t_evgl_pkg_activity_relation relation on t1.activity_id = relation.activity_id
		WHERE t1.activity_id = #{activityId,jdbcType=VARCHAR} 
		GROUP BY t1.activity_id
	</select>
	<select id="selectObjectById2" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select relation.activity_state as activityStateActual, t1.*
		from T_EVGL_ACTIVITY_ANSWER_DISCUSS t1
		inner join t_evgl_pkg_activity_relation relation on t1.activity_id = relation.activity_id
		WHERE t1.activity_id = #{activityId,jdbcType=VARCHAR}
	</select>
	<select id="selectObjectByIdAndPkgId" parameterType="map"
		resultMap="BaseResultMap">
		select relation.activity_state as activityStateActual, 
		relation.activity_begin_time, relation.activity_end_time, group_id,
		t1.*
		from T_EVGL_ACTIVITY_ANSWER_DISCUSS t1
		inner join t_evgl_pkg_activity_relation relation on t1.activity_id = relation.activity_id
		WHERE relation.activity_id = #{activityId,jdbcType=VARCHAR} and relation.pkg_id = #{pkgId}
	</select>
	<select id="selectObjectByGroupId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select t2.*, t1.group_id, t1.activity_state as activityStateActual from t_evgl_pkg_activity_relation t1
		inner join t_evgl_activity_answer_discuss t2 on t1.activity_id = t2.activity_id
		where t1.activity_type = "3"
		and t1.group_id = #{groupId}
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_ACTIVITY_ANSWER_DISCUSS
        <where>
        		<if test="activityIds != null and activityIds.size() > 0">
				and activity_id in 
				    <foreach collection="activityIds" item="activityId" open="(" separator="," close=")">
				        #{activityId,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="resgroupId != null and resgroupId.trim() != ''">
                and resgroup_id =#{resgroupId,jdbcType=VARCHAR}            </if>
                <if test="activityTitle != null and activityTitle.trim() != ''">
                and activity_title =#{activityTitle,jdbcType=VARCHAR}            </if>
                <if test="content != null and content.trim() != ''">
                and content =#{content,jdbcType=LONGVARCHAR}            </if>
                <if test="activityPic != null and activityPic.trim() != ''">
                and activity_pic =#{activityPic,jdbcType=VARCHAR}            </if>
                <if test="empiricalValue != null and empiricalValue != ''">
                and empirical_value =#{empiricalValue,jdbcType=INTEGER}            </if>
                <if test="state != null and state.trim() != ''">
                and state =#{state,jdbcType=VARCHAR}            </if>
                <if test="activityState != null and activityState.trim() != ''">
                and activity_state =#{activityState,jdbcType=VARCHAR}            </if>
                <if test="sortNum != null and sortNum != ''">
                and sort_num =#{sortNum,jdbcType=INTEGER}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="updateUserId != null and updateUserId.trim() != ''">
                and update_user_id =#{updateUserId,jdbcType=VARCHAR}            </if>
                <if test="updateTime != null and updateTime.trim() != ''">
                and update_time =#{updateTime,jdbcType=VARCHAR}            </if>
                <if test="isAllowPic != null and isAllowPic.trim() != ''">
                and is_allow_pic =#{isAllowPic,jdbcType=VARCHAR}            </if>
                <if test="isAllowVoice != null and isAllowVoice.trim() != ''">
                and is_allow_voice =#{isAllowVoice,jdbcType=VARCHAR}            </if>
                <if test="isAllowVideo != null and isAllowVideo.trim() != ''">
                and is_allow_video =#{isAllowVideo,jdbcType=VARCHAR}            </if>
                <if test="activityType != null and activityType.trim() != ''">
                and activity_type =#{activityType,jdbcType=VARCHAR}            </if>
                <if test="purpose != null and purpose.trim() != ''">
                and purpose =#{purpose,jdbcType=VARCHAR}            </if>
                <if test="answerNumber != null and answerNumber != ''">
                and answer_number =#{answerNumber,jdbcType=INTEGER}            </if>
                <if test="chapterId != null and chapterId.trim() != ''">
                and chapter_id =#{chapterId,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by activity_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select * from T_EVGL_ACTIVITY_ANSWER_DISCUSS t1
        <where>
        		<if test="activityIds != null and activityIds.size() > 0">
				and t1.activity_id in 
				    <foreach collection="activityIds" item="activityId" open="(" separator="," close=")">
				        #{activityId,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="resgroupId != null and resgroupId.trim() != ''">
                and t1.resgroup_id =#{resgroupId,jdbcType=VARCHAR}            </if>
                <if test="activityTitle != null and activityTitle.trim() != ''">
                and t1.activity_title =#{activityTitle,jdbcType=VARCHAR}            </if>
                <if test="content != null and content.trim() != ''">
                and t1.content =#{content,jdbcType=LONGVARCHAR}            </if>
                <if test="activityPic != null and activityPic.trim() != ''">
                and t1.activity_pic =#{activityPic,jdbcType=VARCHAR}            </if>
                <if test="empiricalValue != null and empiricalValue != ''">
                and t1.empirical_value =#{empiricalValue,jdbcType=INTEGER}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="activityState != null and activityState.trim() != ''">
                and t1.activity_state =#{activityState,jdbcType=VARCHAR}            </if>
                <if test="sortNum != null and sortNum != ''">
                and t1.sort_num =#{sortNum,jdbcType=INTEGER}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and t1.create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="updateUserId != null and updateUserId.trim() != ''">
                and t1.update_user_id =#{updateUserId,jdbcType=VARCHAR}            </if>
                <if test="updateTime != null and updateTime.trim() != ''">
                and t1.update_time =#{updateTime,jdbcType=VARCHAR}            </if>
                <if test="isAllowPic != null and isAllowPic.trim() != ''">
                and t1.is_allow_pic =#{isAllowPic,jdbcType=VARCHAR}            </if>
                <if test="isAllowVoice != null and isAllowVoice.trim() != ''">
                and t1.is_allow_voice =#{isAllowVoice,jdbcType=VARCHAR}            </if>
                <if test="isAllowVideo != null and isAllowVideo.trim() != ''">
                and t1.is_allow_video =#{isAllowVideo,jdbcType=VARCHAR}            </if>
                <if test="activityType != null and activityType.trim() != ''">
                and t1.activity_type =#{activityType,jdbcType=VARCHAR}            </if>
                <if test="purpose != null and purpose.trim() != ''">
                and t1.purpose =#{purpose,jdbcType=VARCHAR}            </if>
                <if test="answerNumber != null and answerNumber != ''">
                and t1.answer_number =#{answerNumber,jdbcType=INTEGER}            </if>
                <if test="chapterId != null and chapterId.trim() != ''">
                and t1.chapter_id =#{chapterId,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.activity_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="getMaxSortNum" parameterType="map" resultType="Integer">
    	select ifnull(MAX(sort_num), 0) + 1 as sortNum 
    	from t_evgl_activity_answer_discuss t1
    	inner join t_evgl_pkg_activity_relation t2 on t1.activity_id = t2.activity_id
    	<where>
                <if test="resgroupId != null and resgroupId.trim() != ''">
                and t1.resgroup_id =#{resgroupId,jdbcType=VARCHAR}            </if>
                <if test="pkgId != null and pkgId.trim() != ''">
                and t2.pkg_id =#{pkgId,jdbcType=VARCHAR}            </if>
                <if test="chapterId != null and chapterId.trim() != ''">
                and t1.chapter_id =#{chapterId,jdbcType=VARCHAR}            </if>
        </where>
    </select>
    
    <update id="plusNum" parameterType="com.ossbar.modules.evgl.activity.domain.TevglActivityAnswerDiscuss">
    	update t_evgl_activity_answer_discuss
    	<set>
    		<if test="answerNumber ! = null">
    			answer_number = ifnull(answer_number, 0) + #{answerNumber,jdbcType=INTEGER}
    		</if>
    	</set>
    	where activity_id = #{activityId, jdbcType=VARCHAR}
    </update>
    
    <select id="queryChatList" resultType="map"
        parameterType="map">
        select 
        (select read_state from t_im_group_state where msg_id = t1.msg_id and user_id = #{loginUserId}) as 	read_state,
        t1.msg_id, t1.msg_type, t1.msg_content, 
        t1.msg_send_time as send_time, t1.unread_num, t1.read_num,
        t2.user_realname as send_name,t2.userimg as send_img,
        t3.user_id as send_id, t3.group_id as receive_id,
        t4.duration_time, t4.first_capture_access_url, t4.file_size, t4.file_name,
        (select like_id from t_medu_me_like where target_id = t1.msg_id and trainee_id = #{loginUserId}) as liked
        <if test="lastid != null and lastid.trim() != ''">
        from (select * from t_im_group_msg gm where gm.msg_seq &lt; (select t0.msg_seq from t_im_group_msg t0 where t0.msg_id = #{lastid})) t1
        </if>
        <if test="lastid == null or lastid.trim() == ''">
        from T_IM_GROUP_MSG t1
        </if>
        left join t_im_group_user t3 on t1.groupuser_id = t3.groupuser_id
        left join t_im_userinfo t2 on t2.user_id = t3.user_id
        left join t_im_attach t4 on t1.msg_type != 'text' and t1.attach_id = t4.attach_id
        <where>
        		
        		t1.msg_id in (
        			select msg_id from t_im_group_state where groupuser_id in
        				(select groupuser_id from t_im_group_user where group_id = #{groupId,jdbcType=VARCHAR})  
        			group by msg_id
       			)
        		
        		<if test="userId != null and userId.trim() != ''">
                and t2.user_id =#{userId,jdbcType=VARCHAR}            
                </if>
        		<if test="groupId != null and groupId.trim() != ''">
                and t3.group_id =#{groupId,jdbcType=VARCHAR}            
                </if>
                
                <if test="groupuserIds != null and groupuserIds.size() > 0">
                and t1.groupuser_id in 
                	<foreach collection="groupuserIds" item="groupuserId" open="(" separator="," close=")">
                		#{groupuserId,jdbcType=VARCHAR}
                	</foreach>
               	</if>
                <if test="groupuserId != null and groupuserId.trim() != ''">
                and t1.groupuser_id =#{groupuserId,jdbcType=VARCHAR}            </if>
                <if test="msgContent != null and msgContent.trim() != ''">
                and t1.msg_content =#{msgContent,jdbcType=VARCHAR}            </if>
                <if test="msgSendTime != null and msgSendTime.trim() != ''">
                and t1.msg_send_time =#{msgSendTime,jdbcType=TIMESTAMP}            </if>
                <if test="msgType != null and msgType.trim() != ''">
                and t1.msg_type =#{msgType,jdbcType=VARCHAR}            </if>
                <if test="unreadNum != null and unreadNum != ''">
                and t1.unread_num =#{unreadNum,jdbcType=INTEGER}            </if>
                <if test="readNum != null and readNum != ''">
                and t1.read_num =#{readNum,jdbcType=INTEGER}            </if>
                <if test="msgSeq != null and msgSeq.trim() != ''">
                and t1.msg_seq =#{msgSeq,jdbcType=VARCHAR}            </if>
        </where>
        group by t1.msg_id
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.msg_send_time  desc
            </otherwise>
        </choose>
    </select>
    
    <!-- 统计用户数量 -->
    <select id="countUserNum" resultType="map" parameterType="java.lang.String">
		select * from t_im_group_msg where groupuser_id in (select groupuser_id from t_im_group_user where group_id = #{groupId})
		GROUP BY groupuser_id
    </select>
    
    <insert id="insertBatch" parameterType="java.util.List">
		insert into t_evgl_activity_answer_discuss
			(
			activity_id, resgroup_id, activity_title, content, activity_pic,
			empirical_value, activity_begin_time, activity_end_time, state, activity_state,
			sort_num, create_user_id, create_time, update_user_id, update_time, 
			is_allow_pic, is_allow_voice, is_allow_video, activity_type,
			purpose, answer_number, chapter_id
			)
		values
	    <foreach collection="list" item="obj" separator="," >
	    	(
	    	#{obj.activityId}, #{obj.resgroupId}, #{obj.activityTitle}, #{obj.content}, #{obj.activityPic},
	    	#{obj.empiricalValue}, #{obj.activityBeginTime}, #{obj.activityEndTime}, #{obj.state}, #{obj.activityState},
	    	#{obj.sortNum}, #{obj.createUserId}, #{obj.createTime}, #{obj.updateUserId}, #{obj.updateTime},
	    	#{obj.isAllowPic}, #{obj.isAllowVoice}, #{obj.isAllowVideo},
	    	#{obj.activityType}, #{obj.purpose}, #{obj.answerNumber}, #{obj.chapterId}
	    	)
	    </foreach>
	</insert>
</mapper>

