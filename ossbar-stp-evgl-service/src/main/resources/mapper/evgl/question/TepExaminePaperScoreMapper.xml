<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.question.persistence.TepExaminePaperScoreMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.question.domain.TepExaminePaperScore">
		<result column="score_id" jdbcType="VARCHAR"
			property="scoreId" />
		<result column="history_id" jdbcType="VARCHAR"
			property="historyId" />
		<result column="questions_id" jdbcType="VARCHAR"
			property="questionsId" />
		<result column="trainee_id" jdbcType="VARCHAR"
			property="traineeId" />
		<result column="reply_id" jdbcType="VARCHAR"
			property="replyId" />
		<result column="questions_score" jdbcType="VARCHAR"
			property="questionsScore" />
		<result column="state" jdbcType="VARCHAR"
			property="state" />
		<result column="trainee_type" jdbcType="VARCHAR"
			property="traineeType" />
		<result column="is_correct" jdbcType="VARCHAR"
			property="isCorrect" />
		<result column="questions_num" jdbcType="VARCHAR"
			property="questionsNum" />
		<result column="content" jdbcType="LONGVARCHAR"
			property="content" />
		<result column="score" jdbcType="VARCHAR"
			property="score" />		
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		score_id,history_id,questions_id,trainee_id,reply_id,questions_score,state,trainee_type,is_correct,questions_num,content,score
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.question.domain.TepExaminePaperScore">
		INSERT INTO T_EP_EXAMINE_PAPER_SCORE (
		score_id ,
		history_id ,
		questions_id ,
		trainee_id ,
		reply_id ,
		questions_score ,
		state ,
		trainee_type ,
		is_correct,
		questions_num ,
		content ,
		score 
		) VALUES (

#{scoreId,jdbcType=VARCHAR} ,

#{historyId,jdbcType=VARCHAR} ,

#{questionsId,jdbcType=VARCHAR} ,

#{traineeId,jdbcType=VARCHAR} ,

#{replyId,jdbcType=VARCHAR} ,

#{questionsScore,jdbcType=VARCHAR} ,

#{state,jdbcType=VARCHAR} ,

#{traineeType,jdbcType=VARCHAR} ,
#{isCorrect,jdbcType=VARCHAR} ,
#{questionsNum,jdbcType=VARCHAR} ,

#{content,jdbcType=LONGVARCHAR},

#{score,jdbcType=VARCHAR}

		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.question.domain.TepExaminePaperScore">
		UPDATE T_EP_EXAMINE_PAPER_SCORE 
		<set>
		<if test="historyId != null">
		history_id = #{historyId,jdbcType=VARCHAR},
		</if>
		<if test="questionsId != null">
		questions_id = #{questionsId,jdbcType=VARCHAR},
		</if>
		<if test="traineeId != null">
		trainee_id = #{traineeId,jdbcType=VARCHAR},
		</if>
		<if test="replyId != null">
		reply_id = #{replyId,jdbcType=VARCHAR},
		</if>
		<if test="questionsScore != null">
		questions_score = #{questionsScore,jdbcType=VARCHAR},
		</if>
		<if test="state != null">
		state = #{state,jdbcType=VARCHAR},
		</if>
		<if test="traineeType != null">
		trainee_type = #{traineeType,jdbcType=VARCHAR},
		</if>
		<if test="isCorrect != null">
		is_correct = #{isCorrect,jdbcType=VARCHAR},
		</if>
		<if test="questionsNum != null">
		questions_num = #{questionsNum,jdbcType=VARCHAR},
		</if>
		<if test="score != null">
		score = #{score,jdbcType=VARCHAR},
		</if>
		content = #{content,jdbcType=VARCHAR}
		<!-- <if test="content != null">
		content = #{content,jdbcType=LONGVARCHAR},
		</if> -->
		</set>
		WHERE
		score_id = #{scoreId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EP_EXAMINE_PAPER_SCORE WHERE
		score_id =
		#{scoreId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EP_EXAMINE_PAPER_SCORE WHERE
		score_id in
		<foreach item="scoreId" collection="array" open="("
			separator="," close=")">
#{scoreId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EP_EXAMINE_PAPER_SCORE WHERE
		score_id = #{scoreId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EP_EXAMINE_PAPER_SCORE
        <where>
	    	    <if test="questionsIdList != null and questionsIdList.size() > 0">
	                and questions_id in
	                <foreach collection="questionsIdList" item="questionsId" open="(" separator="," close=")">
	                    #{questionsId,jdbcType=VARCHAR}
	                </foreach>
	            </if>
        		<if test="historyIds != null and historyIds.size() > 0">
                and history_id in
	                <foreach collection="historyIds" item="historyId" open="(" separator="," close=")">
	                	#{historyId,jdbcType=VARCHAR}            
	                </foreach> 
                </if>
                <if test="traineeIds != null and traineeIds.size() > 0">
                and trainee_id in
                	<foreach collection="traineeIds" item="traineeId" open="(" separator="," close=")">
                		#{traineeId,jdbcType=VARCHAR}
                	</foreach>
                </if>
                
                <if test="historyId != null and historyId.trim() != ''">
                and history_id =#{historyId,jdbcType=VARCHAR}            </if>
                <if test="questionsId != null and questionsId.trim() != ''">
                and questions_id =#{questionsId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="replyId != null and replyId.trim() != ''">
                and reply_id =#{replyId,jdbcType=VARCHAR}            </if>
                <if test="questionsScore != null and questionsScore.trim() != ''">
                and questions_score =#{questionsScore,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and state =#{state,jdbcType=VARCHAR}            </if>
                <if test="isCorrect != null and isCorrect.trim() != ''">
                and is_correct =#{isCorrect,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by score_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select * from T_EP_EXAMINE_PAPER_SCORE t1
        <where>
        		<if test="historyIds != null and historyIds.size() > 0">
                and t1.history_id in
	                <foreach collection="historyIds" item="historyId" open="(" separator="," close=")">
	                	#{historyId,jdbcType=VARCHAR}            
	                </foreach> 
                </if>
                <if test="historyId != null and historyId.trim() != ''">
                and t1.history_id =#{historyId,jdbcType=VARCHAR}            </if>
                <if test="questionsId != null and questionsId.trim() != ''">
                and t1.questions_id =#{questionsId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="replyId != null and replyId.trim() != ''">
                and t1.reply_id =#{replyId,jdbcType=VARCHAR}            </if>
                <if test="questionsScore != null and questionsScore.trim() != ''">
                and t1.questions_score =#{questionsScore,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.score_id  desc
            </otherwise>
        </choose>
    </select>
    <select id="selectListMapLinkQuestionByMap" resultType="map"
        parameterType="map">
        select * from T_EP_EXAMINE_PAPER_SCORE t1 join t_evgl_questions_info t2 on t1.questions_id = t2.questions_id
        <where>
        		<if test="historyIds != null and historyIds.trim() != ''">
                and t1.history_id in
	                <foreach collection="historyIds" item="historyId" open="(" separator="," close=")">
	                	#{historyId,jdbcType=VARCHAR}            
	                </foreach> 
                </if>
                <if test="historyId != null and historyId.trim() != ''">
                and t1.history_id =#{historyId,jdbcType=VARCHAR}            </if>
                <if test="questionsId != null and questionsId.trim() != ''">
                and t1.questions_id =#{questionsId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="replyId != null and replyId.trim() != ''">
                and t1.reply_id =#{replyId,jdbcType=VARCHAR}            </if>
                <if test="questionsScore != null and questionsScore.trim() != ''">
                and t1.questions_score =#{questionsScore,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="questionsType != null and questionsType.trim() != ''">
                and t2.questions_type =#{questionsType,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.questions_num+'0'  asc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectSimpleListMap" resultType="map"
        parameterType="map">
        select t1.score_id as scoreId, t1.history_id as historyId, t1.questions_id as questionsId, t1.trainee_id as traineeId, t1.score,
        t1.reply_id as replyId, t1.questions_score as questionsScore, t1.state, t1.is_correct as isCorrect, t1.questions_num as questionsNum, t1.content,
        t2.questions_name as questionsName, t2.questions_complexity as questionsComplexity, t2.questions_type as questionsType, t2.questions_type as questionsTypeName,
        t2.reply_ids as replyIds, t2.questions_parse as questionsParse, t2.tag, t2.parent_id as parentId
        from T_EP_EXAMINE_PAPER_SCORE t1 
        join t_evgl_questions_info t2 on t1.questions_id = t2.questions_id
        <where>
                <if test="historyId != null and historyId.trim() != ''">
                and t1.history_id =#{historyId,jdbcType=VARCHAR}            </if>
                <if test="questionsId != null and questionsId.trim() != ''">
                and t1.questions_id =#{questionsId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="replyId != null and replyId.trim() != ''">
                and t1.reply_id =#{replyId,jdbcType=VARCHAR}            </if>
                <if test="questionsScore != null and questionsScore.trim() != ''">
                and t1.questions_score =#{questionsScore,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="questionsType != null and questionsType.trim() != ''">
                and t2.questions_type =#{questionsType,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.questions_num+'0'  asc
            </otherwise>
        </choose>
    </select>
    
    <update id="updateBatchByDuplicateKey" parameterType="java.util.List">
        INSERT INTO T_EP_EXAMINE_PAPER_SCORE
        (score_id, reply_id, content, trainee_type, questions_score, is_correct)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.scoreId}, #{item.replyId}, #{item.content}, #{item.traineeType}, #{item.questionsScore},
                #{item.isCorrect}
            )
        </foreach>
        on duplicate key update
        score_id=values(score_id),
        reply_id=values(reply_id),
        content=VALUES(content),
        trainee_type=VALUES(trainee_type),
        questions_score=VALUES(questions_score),
        is_correct=VALUES(is_correct)
        ;
    </update>
    
    <insert id="insertBatch" parameterType="java.util.List">
        insert into t_ep_examine_paper_score
        (
        score_id, history_id, questions_id, trainee_id, reply_id,
        questions_score, state, trainee_type, is_correct, questions_num,
        content, score
        )
        values
        <foreach collection="list" item="obj" separator="," >
            (
            #{obj.scoreId}, #{obj.historyId}, #{obj.questionsId}, #{obj.traineeId}, #{obj.replyId},
            #{obj.questionsScore}, #{obj.state}, #{obj.traineeType}, #{obj.isCorrect}, #{obj.questionsNum},
            #{obj.content}, #{obj.score}
            )
        </foreach>
    </insert>
</mapper>

