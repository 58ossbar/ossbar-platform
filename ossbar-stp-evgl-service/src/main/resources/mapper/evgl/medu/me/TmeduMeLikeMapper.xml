<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.medu.me.persistence.TmeduMeLikeMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.medu.me.domain.TmeduMeLike">
		<result column="like_id" jdbcType="VARCHAR"
			property="likeId" />
		<result column="trainee_id" jdbcType="VARCHAR"
			property="traineeId" />
		<result column="like_type" jdbcType="VARCHAR"
			property="likeType" />
		<result column="target_id" jdbcType="VARCHAR"
			property="targetId" />
		<result column="like_time" jdbcType="VARCHAR"
			property="likeTime" />
		<result column="target_trainee_id" jdbcType="VARCHAR"
			property="targetTraineeId" />
		<result column="read_state" jdbcType="VARCHAR"
			property="readState" />		
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		like_id,trainee_id,like_type,target_id,like_time,target_trainee_id,read_state
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.medu.me.domain.TmeduMeLike">
		INSERT INTO T_MEDU_ME_LIKE (
		like_id ,
		trainee_id ,
		like_type ,
		target_id ,
		like_time ,
		target_trainee_id,
		read_state
		) VALUES (

#{likeId,jdbcType=VARCHAR} ,

#{traineeId,jdbcType=VARCHAR} ,

#{likeType,jdbcType=VARCHAR} ,

#{targetId,jdbcType=VARCHAR} ,

#{likeTime,jdbcType=VARCHAR} ,

#{targetTraineeId,jdbcType=VARCHAR} ,

#{readState,jdbcType=VARCHAR} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.medu.me.domain.TmeduMeLike">
		UPDATE T_MEDU_ME_LIKE 
		<set>
		<if test="traineeId != null">
		trainee_id = #{traineeId,jdbcType=VARCHAR},
		</if>
		<if test="likeType != null">
		like_type = #{likeType,jdbcType=VARCHAR},
		</if>
		<if test="targetId != null">
		target_id = #{targetId,jdbcType=VARCHAR},
		</if>
		<if test="likeTime != null">
		like_time = #{likeTime,jdbcType=VARCHAR},
		</if>
		<if test="targetTraineeId != null">
		target_trainee_id = #{targetTraineeId,jdbcType=VARCHAR},
		</if>
		<if test="readState != null">
		read_state = #{readState,jdbcType=VARCHAR},
		</if>
		</set>
		WHERE
		like_id = #{likeId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_MEDU_ME_LIKE WHERE
		like_id =
		#{likeId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_MEDU_ME_LIKE WHERE
		like_id in
		<foreach item="likeId" collection="array" open="("
			separator="," close=")">
#{likeId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_MEDU_ME_LIKE WHERE
		like_id = #{likeId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_MEDU_ME_LIKE
        <where>
                <if test="targetIds != null and targetIds.size() > 0">
                and target_id in
                	<foreach collection="targetIds" item="targetId" open="(" separator="," close=")">
                		#{targetId} 
                	</foreach>
                </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="likeType != null and likeType.trim() != ''">
                and like_type =#{likeType,jdbcType=VARCHAR}            </if>
                <if test="targetId != null and targetId.trim() != ''">
                and target_id =#{targetId,jdbcType=VARCHAR}            </if>
                <if test="likeTime != null and likeTime.trim() != ''">
                and like_time =#{likeTime,jdbcType=VARCHAR}            </if>
                <if test="targetTraineeId != null and targetTraineeId.trim() != ''">
                and target_trainee_id =#{targetTraineeId,jdbcType=VARCHAR}            </if>
                <if test="readState != null and readState.trim() != ''">
                and read_state =#{readState,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by like_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select * from T_MEDU_ME_LIKE t1
        <where>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="likeType != null and likeType.trim() != ''">
                and t1.like_type =#{likeType,jdbcType=VARCHAR}            </if>
                <if test="targetId != null and targetId.trim() != ''">
                and t1.target_id =#{targetId,jdbcType=VARCHAR}            </if>
                <if test="likeTime != null and likeTime.trim() != ''">
                and t1.like_time =#{likeTime,jdbcType=VARCHAR}            </if>
                <if test="targetTraineeId != null and targetTraineeId.trim() != ''">
                and t1.target_trainee_id =#{targetTraineeId,jdbcType=VARCHAR}            </if>
                <if test="readState != null and readState.trim() != ''">
                and t1.read_state =#{readState,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.like_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="queryPeopleGiveMeLikes" resultType="map"
        parameterType="map">
        select t1.like_id as likeId, t1.like_type as likeType, t1.read_state as readState,
        t1.target_id as targetId, t1.like_time as likeTime, t1.target_trainee_id as targetTraineeId,
        t2.trainee_id as fromTraineeId, ifnull(t2.trainee_name, t2.nick_name) as fromTraineeName,
        ifnull(t2.trainee_pic, t2.trainee_head) as fromTraineePic,
        t3.trainee_id as toTraineeId, ifnull(t3.trainee_name, t3.nick_name) as toTraineeName,
        ifnull(t3.trainee_pic, t3.trainee_head) as toTraineePic
        from T_MEDU_ME_LIKE t1
        inner join t_evgl_trainee_info t2 on t1.trainee_id = t2.trainee_id
        inner join t_evgl_trainee_info t3 on t1.target_trainee_id = t3.trainee_id
        <where>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="likeType != null and likeType.trim() != ''">
                and t1.like_type =#{likeType,jdbcType=VARCHAR}            </if>
                <if test="targetId != null and targetId.trim() != ''">
                and t1.target_id =#{targetId,jdbcType=VARCHAR}            </if>
                <if test="likeTime != null and likeTime.trim() != ''">
                and t1.like_time =#{likeTime,jdbcType=VARCHAR}            </if>
                <if test="targetTraineeId != null and targetTraineeId.trim() != ''">
                and t1.target_trainee_id =#{targetTraineeId,jdbcType=VARCHAR}            </if>
                <if test="readState != null and readState.trim() != ''">
                and t1.read_state =#{readState,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.like_time  desc
            </otherwise>
        </choose>
    </select>
    
    <update id="updateReadState" parameterType="map">
    	update t_medu_me_like set read_state = #{readState}
    	where like_id in 
    	<foreach collection="likeIds" item="likeId" open="(" separator="," close=")">
    		#{likeId}
    	</foreach>
    	
    </update>
    
    <select id="countUnreadNum" parameterType="String" resultType="int">
    	select count(*) from t_medu_me_like where read_state = 'N' and target_trainee_id = #{loginUserId}
    </select>
    
</mapper>

