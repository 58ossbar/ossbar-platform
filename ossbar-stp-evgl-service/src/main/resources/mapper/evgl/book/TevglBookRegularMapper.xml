<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.book.persistence.TevglBookRegularMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.book.domain.TevglBookRegular">
		<result column="regular_id" jdbcType="VARCHAR"
			property="regularId" />
		<result column="subject_id" jdbcType="VARCHAR"
			property="subjectId" />
		<result column="parent_id" jdbcType="VARCHAR"
			property="parentId" />
		<result column="regular_name" jdbcType="VARCHAR"
			property="regularName" />
		<result column="regular_sum" jdbcType="DECIMAL"
			property="regularSum" />
		<result column="regular_sort" jdbcType="INTEGER"
			property="regularSort" />
		<result column="regular_type" jdbcType="VARCHAR"
			property="regularType" />
		<result column="regular_desc" jdbcType="LONGVARCHAR"
			property="regularDesc" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		regular_id,subject_id,parent_id,regular_name,regular_sum,regular_sort,regular_type,regular_desc
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.book.domain.TevglBookRegular">
		INSERT INTO T_EVGL_BOOK_REGULAR (
		regular_id ,
		subject_id ,
		parent_id ,
		regular_name ,
		regular_sum ,
		regular_sort ,
		regular_type ,
		regular_desc 
		) VALUES (

#{regularId,jdbcType=VARCHAR} ,

#{subjectId,jdbcType=VARCHAR} ,

#{parentId,jdbcType=VARCHAR} ,

#{regularName,jdbcType=VARCHAR} ,

#{regularSum,jdbcType=DECIMAL} ,

#{regularSort,jdbcType=INTEGER} ,

#{regularType,jdbcType=VARCHAR} ,

#{regularDesc,jdbcType=LONGVARCHAR} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.book.domain.TevglBookRegular">
		UPDATE T_EVGL_BOOK_REGULAR 
		<set>
		<if test="subjectId != null">
		subject_id = #{subjectId,jdbcType=VARCHAR},
		</if>
		<if test="parentId != null">
		parent_id = #{parentId,jdbcType=VARCHAR},
		</if>
		<if test="regularName != null">
		regular_name = #{regularName,jdbcType=VARCHAR},
		</if>
		<if test="regularSum != null">
		regular_sum = #{regularSum,jdbcType=DECIMAL},
		</if>
		<if test="regularSort != null">
		regular_sort = #{regularSort,jdbcType=INTEGER},
		</if>
		<if test="regularType != null">
		regular_type = #{regularType,jdbcType=VARCHAR},
		</if>
		<if test="regularDesc != null">
		regular_desc = #{regularDesc,jdbcType=LONGVARCHAR},
		</if>
		</set>
		WHERE
		regular_id = #{regularId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_BOOK_REGULAR WHERE
		regular_id =
		#{regularId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_BOOK_REGULAR WHERE
		regular_id in
		<foreach item="regularId" collection="array" open="("
			separator="," close=")">
#{regularId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_BOOK_REGULAR WHERE
		regular_id = #{regularId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_BOOK_REGULAR
        <where>
        		<if test="subjectIds != null and subjectIds.size() > 0">
					and subject_id in 
				    <foreach collection="subjectIds" item="subjectId" open="(" separator="," close=")">
				        #{subjectId,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="subjectId != null and subjectId.trim() != ''">
                and subject_id =#{subjectId,jdbcType=VARCHAR}            </if>
                <if test="parentId != null and parentId.trim() != ''">
                and parent_id =#{parentId,jdbcType=VARCHAR}            </if>
                <if test="regularName != null and regularName.trim() != ''">
                and regular_name =#{regularName,jdbcType=VARCHAR}            </if>
                <if test="regularSum != null and regularSum != ''">
                and regular_sum =#{regularSum,jdbcType=DECIMAL}            </if>
                <if test="regularSort != null and regularSort != ''">
                and regular_sort =#{regularSort,jdbcType=INTEGER}            </if>
                <if test="regularType != null and regularType.trim() != ''">
                and regular_type =#{regularType,jdbcType=VARCHAR}            </if>
                <if test="regularDesc != null and regularDesc.trim() != ''">
                and regular_desc =#{regularDesc,jdbcType=LONGVARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by regular_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select t1.*, t2.subject_name 
        from T_EVGL_BOOK_REGULAR t1
        inner join t_evgl_book_subject t2 on t1.subject_id = t2.subject_id
        <where>
        		<if test="subjectIds != null and subjectIds.size() > 0">
					and t1.subject_id in 
				    <foreach collection="subjectIds" item="subjectId" open="(" separator="," close=")">
				        #{subjectId,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="subjectId != null and subjectId.trim() != ''">
                and t1.subject_id =#{subjectId,jdbcType=VARCHAR}            </if>
                <if test="parentId != null and parentId.trim() != ''">
                and t1.parent_id =#{parentId,jdbcType=VARCHAR}            </if>
                <if test="regularName != null and regularName.trim() != ''">
                and t1.regular_name =#{regularName,jdbcType=VARCHAR}            </if>
                <if test="regularSum != null and regularSum != ''">
                and t1.regular_sum =#{regularSum,jdbcType=DECIMAL}            </if>
                <if test="regularSort != null and regularSort != ''">
                and t1.regular_sort =#{regularSort,jdbcType=INTEGER}            </if>
                <if test="regularType != null and regularType.trim() != ''">
                and t1.regular_type =#{regularType,jdbcType=VARCHAR}            </if>
                <if test="regularDesc != null and regularDesc.trim() != ''">
                and t1.regular_desc =#{regularDesc,jdbcType=LONGVARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.regular_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListByMapForSp" resultType="map"
        parameterType="map">
        select t1.*,t2.subject_name 
            from t_evgl_book_regular t1 
            inner join t_evgl_book_subject t2 on t1.subject_id = t2.subject_id
        <where>
                <if test="subjectId != null and subjectId.trim() != ''">
                and t1.subject_id =#{subjectId,jdbcType=VARCHAR}            </if>
                <if test="parentId != null and parentId.trim() != ''">
                and t1.parent_id =#{parentId,jdbcType=VARCHAR}          </if>
                <if test="regularName != null and regularName.trim() != ''">
                and regular_name like concat ('%',#{regularName,jdbcType=VARCHAR},'%')          </if>
                <if test="regularSum != null and regularSum != ''">
                and regular_sum like concat ('%',#{regularSum,jdbcType=DECIMAL},'%')        </if>
                <if test="regularSort != null and regularSort != ''">
                and regular_sort like concat ('%',#{regularSort,jdbcType=INTEGER},'%')          </if>
                <if test="regularType != null and regularType.trim() != ''">
                and regular_type like concat ('%',#{regularType,jdbcType=VARCHAR},'%')          </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by regular_id  asc
            </otherwise>
        </choose>
    </select>
    
    <select id="getMaxSortNum" resultType="INTEGER" parameterType="map">
        select ifnull(max(t1.regular_sort), 0) + 1 from t_evgl_book_regular t1
        <where>
                <if test="subjectId != null and subjectId.trim() != ''">
                and t1.subject_id =#{subjectId,jdbcType=VARCHAR}            </if>
                <if test="parentId != null and parentId.trim() != ''">
                and t1.parent_id =#{parentId,jdbcType=VARCHAR}          </if>
                <if test="regularName != null and regularName.trim() != ''">
                and t1.regular_name like concat ('%',#{regularName,jdbcType=VARCHAR},'%')          </if>
                <if test="regularSum != null and regularSum != ''">
                and t1.regular_sum like concat ('%',#{regularSum,jdbcType=DECIMAL},'%')        </if>
                <if test="regularSort != null and regularSort != ''">
                and t1.regular_sort like concat ('%',#{regularSort,jdbcType=INTEGER},'%')          </if>
                <if test="regularType != null and regularType.trim() != ''">
                and t1.regular_type like concat ('%',#{regularType,jdbcType=VARCHAR},'%')          </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by regular_id  asc
            </otherwise>
        </choose>
    </select>
</mapper>

