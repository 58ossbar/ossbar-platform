<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.site.persistence.TevglSiteFeedbackMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.site.domain.TevglSiteFeedback">
		<result column="feedback_id" jdbcType="VARCHAR"
			property="feedbackId" />
		<result column="type" jdbcType="VARCHAR"
			property="type" />
		<result column="feedback_type" jdbcType="VARCHAR"
			property="feedbackType" />
		<result column="feedback_content" jdbcType="VARCHAR"
			property="feedbackContent" />
		<result column="create_user_id" jdbcType="VARCHAR"
			property="createUserId" />
		<result column="create_time" jdbcType="VARCHAR"
			property="createTime" />
		<result column="update_user_id" jdbcType="VARCHAR"
			property="updateUserId" />
		<result column="update_time" jdbcType="VARCHAR"
			property="updateTime" />
		<result column="state" jdbcType="VARCHAR"
			property="state" />
		<result column="has_replied" jdbcType="VARCHAR"
			property="hasReplied" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		feedback_id,type,feedback_type,feedback_content,create_user_id,create_time,update_user_id,update_time,state,has_replied
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.site.domain.TevglSiteFeedback">
		INSERT INTO T_EVGL_SITE_FEEDBACK (
		feedback_id ,
		type ,
		feedback_type ,
		feedback_content ,
		create_user_id ,
		create_time ,
		update_user_id ,
		update_time ,
		state ,
		has_replied 
		) VALUES (

#{feedbackId,jdbcType=VARCHAR} ,

#{type,jdbcType=VARCHAR} ,

#{feedbackType,jdbcType=VARCHAR} ,

#{feedbackContent,jdbcType=VARCHAR} ,

#{createUserId,jdbcType=VARCHAR} ,

#{createTime,jdbcType=VARCHAR} ,

#{updateUserId,jdbcType=VARCHAR} ,

#{updateTime,jdbcType=VARCHAR} ,

#{state,jdbcType=VARCHAR} ,

#{hasReplied,jdbcType=VARCHAR} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.site.domain.TevglSiteFeedback">
		UPDATE T_EVGL_SITE_FEEDBACK 
		<set>
		<if test="type != null">
		type = #{type,jdbcType=VARCHAR},
		</if>
		<if test="feedbackType != null">
		feedback_type = #{feedbackType,jdbcType=VARCHAR},
		</if>
		<if test="feedbackContent != null">
		feedback_content = #{feedbackContent,jdbcType=VARCHAR},
		</if>
		<if test="createUserId != null">
		create_user_id = #{createUserId,jdbcType=VARCHAR},
		</if>
		<if test="createTime != null">
		create_time = #{createTime,jdbcType=VARCHAR},
		</if>
		<if test="updateUserId != null">
		update_user_id = #{updateUserId,jdbcType=VARCHAR},
		</if>
		<if test="updateTime != null">
		update_time = #{updateTime,jdbcType=VARCHAR},
		</if>
		<if test="state != null">
		state = #{state,jdbcType=VARCHAR},
		</if>
		<if test="hasReplied != null">
		has_replied = #{hasReplied,jdbcType=VARCHAR},
		</if>
		</set>
		WHERE
		feedback_id = #{feedbackId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_SITE_FEEDBACK WHERE
		feedback_id =
		#{feedbackId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_SITE_FEEDBACK WHERE
		feedback_id in
		<foreach item="feedbackId" collection="array" open="("
			separator="," close=")">
#{feedbackId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_SITE_FEEDBACK WHERE
		feedback_id = #{feedbackId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_SITE_FEEDBACK
        <where>
                <if test="type != null and type.trim() != ''">
                and type =#{type,jdbcType=VARCHAR}            </if>
                <if test="feedbackType != null and feedbackType.trim() != ''">
                and feedback_type =#{feedbackType,jdbcType=VARCHAR}            </if>
                <if test="feedbackContent != null and feedbackContent.trim() != ''">
                and feedback_content =#{feedbackContent,jdbcType=VARCHAR}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="updateUserId != null and updateUserId.trim() != ''">
                and update_user_id =#{updateUserId,jdbcType=VARCHAR}            </if>
                <if test="updateTime != null and updateTime.trim() != ''">
                and update_time =#{updateTime,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and state =#{state,jdbcType=VARCHAR}            </if>
                <if test="hasReplied != null and hasReplied.trim() != ''">
                and has_replied =#{hasReplied,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by feedback_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select t1.feedback_id as feedbackId, t1.type, t1.feedback_type as feedbackType, t1.feedback_content as feedbackContent,
        t1.create_user_id as createUserId, t1.create_time as createTime,
        if(t1.has_replied = 'Y', '已回复', '未回复')  as hasReplied,
        t2.trainee_id as traineeId, ifnull(t2.trainee_name, nick_name) as traineeName, t1.state,
        ifnull(trainee_pic, trainee_head) as traineePic, ifnull(t2.trainee_type, '1') as traineeType
        from T_EVGL_SITE_FEEDBACK t1 
        inner join t_evgl_trainee_info t2 on t1.create_user_id = t2.trainee_id
        <where>
        
        		<if test="traineeName != null and traineeName.trim() != ''">
                and t2.trainee_name like concat ('%', #{traineeName,jdbcType=VARCHAR}, '%')
                or t2.nick_name like concat ('%', #{traineeName,jdbcType=VARCHAR}, '%')            
                </if>
        		
                <if test="type != null and type.trim() != ''">
                and t1.type =#{type,jdbcType=VARCHAR}            </if>
                <if test="feedbackType != null and feedbackType.trim() != ''">
                and t1.feedback_type =#{feedbackType,jdbcType=VARCHAR}            </if>
                <if test="feedbackContent != null and feedbackContent.trim() != ''">
                and t1.feedback_content =#{feedbackContent,jdbcType=VARCHAR}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and t1.create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="updateUserId != null and updateUserId.trim() != ''">
                and t1.update_user_id =#{updateUserId,jdbcType=VARCHAR}            </if>
                <if test="updateTime != null and updateTime.trim() != ''">
                and t1.update_time =#{updateTime,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="hasReplied != null and hasReplied.trim() != ''">
                and t1.has_replied =#{hasReplied,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.feedback_id  desc
            </otherwise>
        </choose>
    </select>
</mapper>

