<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.pkg.persistence.TevglPkgActivityRelationMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.pkg.domain.TevglPkgActivityRelation">
		<result column="pa_id" jdbcType="VARCHAR"
			property="paId" />
		<result column="pkg_id" jdbcType="VARCHAR"
			property="pkgId" />
		<result column="activity_id" jdbcType="VARCHAR"
			property="activityId" />
		<result column="activity_type" jdbcType="VARCHAR"
			property="activityType" />
		<result column="activity_state" jdbcType="VARCHAR"
			property="activityState" />
		<result column="activity_begin_time" jdbcType="VARCHAR"
			property="activityBeginTime" />
		<result column="activity_end_time" jdbcType="VARCHAR"
			property="activityEndTime" />
		<result column="group_id" jdbcType="VARCHAR"
			property="groupId" />		
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		pa_id,pkg_id,activity_id,activity_type,activity_state,activity_begin_time,activity_end_time,group_id
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.pkg.domain.TevglPkgActivityRelation">
		INSERT INTO T_EVGL_PKG_ACTIVITY_RELATION (
		pa_id ,
		pkg_id ,
		activity_id ,
		activity_type ,
		activity_state ,
		activity_begin_time ,
		activity_end_time  ,
		group_id 
		) VALUES (

#{paId,jdbcType=VARCHAR} ,

#{pkgId,jdbcType=VARCHAR} ,

#{activityId,jdbcType=VARCHAR} ,

#{activityType,jdbcType=VARCHAR} ,

#{activityState,jdbcType=VARCHAR} ,

#{activityBeginTime,jdbcType=VARCHAR} ,

#{activityEndTime,jdbcType=VARCHAR} ,

#{groupId,jdbcType=VARCHAR} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.pkg.domain.TevglPkgActivityRelation">
		UPDATE T_EVGL_PKG_ACTIVITY_RELATION 
		<set>
		<if test="pkgId != null">
		pkg_id = #{pkgId,jdbcType=VARCHAR},
		</if>
		<if test="activityId != null">
		activity_id = #{activityId,jdbcType=VARCHAR},
		</if>
		<if test="activityType != null">
		activity_type = #{activityType,jdbcType=VARCHAR},
		</if>
		<if test="activityState != null">
		activity_state = #{activityState,jdbcType=VARCHAR},
		</if>
		<if test="activityBeginTime != null">
		activity_begin_time = #{activityBeginTime,jdbcType=VARCHAR},
		</if>
		<if test="activityEndTime != null">
		activity_end_time = #{activityEndTime,jdbcType=VARCHAR},
		</if>
		<if test="groupId != null">
		group_id = #{groupId,jdbcType=VARCHAR},
		</if>
		</set>
		WHERE
		pa_id = #{paId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_PKG_ACTIVITY_RELATION WHERE
		pa_id =
		#{paId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_PKG_ACTIVITY_RELATION WHERE
		pa_id in
		<foreach item="paId" collection="array" open="("
			separator="," close=")">
#{paId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_PKG_ACTIVITY_RELATION WHERE
		pa_id = #{paId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_PKG_ACTIVITY_RELATION
        <where>
        		<if test="activityEndTimeIsNotNull != null and activityEndTimeIsNotNull.trim() != ''">
                and activity_end_time is not null and activity_end_time != ''            
                </if>
                <if test="pkgIds != null and pkgIds.size() > 0">
					and pkg_id in 
				    <foreach collection="pkgIds" item="pkgId" open="(" separator="," close=")">
				        #{pkgId,jdbcType=VARCHAR}
				    </foreach> 
				</if>
        		<if test="activityStateList != null and activityStateList.size() > 0">
					and activity_state in 
				    <foreach collection="activityStateList" item="activityState" open="(" separator="," close=")">
				        #{activityState,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="pkgId != null and pkgId.trim() != ''">
                and pkg_id =#{pkgId,jdbcType=VARCHAR}            </if>
                <if test="activityId != null and activityId.trim() != ''">
                and activity_id =#{activityId,jdbcType=VARCHAR}            </if>
                <if test="activityType != null and activityType.trim() != ''">
                and activity_type =#{activityType,jdbcType=VARCHAR}            </if>
                <if test="activityState != null and activityState.trim() != ''">
                and activity_state =#{activityState,jdbcType=VARCHAR}            </if>
                <if test="activityBeginTime != null and activityBeginTime.trim() != ''">
                and activity_begin_time =#{activityBeginTime,jdbcType=VARCHAR}            </if>
                <if test="activityEndTime != null and activityEndTime.trim() != ''">
                and activity_end_time =#{activityEndTime,jdbcType=VARCHAR}            </if>
                <if test="groupId != null and groupId.trim() != ''">
                and group_id =#{groupId,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by pa_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select *,
			case t1.activity_type
				when 1 then (select v1.activity_title from t_evgl_activity_vote_questionnaire v1 where v1.activity_id = t1.activity_id)
				when 6 then (select v6.answer_title from t_evgl_tch_room_pere_answer v6 where v6.answer_id = t1.activity_id)
				when 8 then (select v8.activity_title from t_evgl_activity_signin_info v8 where v8.activity_id = t1.activity_id)
			end activity_title
		from T_EVGL_PKG_ACTIVITY_RELATION t1
        <where>
        		<if test="activityEndTimeIsNotNull != null and activityEndTimeIsNotNull.trim() != ''">
                and t1.activity_end_time is not null and activity_end_time != ''            
                </if>
                <if test="pkgIds != null and pkgIds.size() > 0">
				and t1.pkg_id in 
				    <foreach collection="pkgIds" item="pkgId" open="(" separator="," close=")">
				        #{pkgId,jdbcType=VARCHAR}
				    </foreach> 
				</if>
        		<if test="activityStateList != null and activityStateList.size() > 0">
				and t1.activity_state in 
				    <foreach collection="activityStateList" item="activityState" open="(" separator="," close=")">
				        #{activityState,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="pkgId != null and pkgId.trim() != ''">
                and t1.pkg_id =#{pkgId,jdbcType=VARCHAR}            </if>
                <if test="activityId != null and activityId.trim() != ''">
                and t1.activity_id =#{activityId,jdbcType=VARCHAR}            </if>
                <if test="activityType != null and activityType.trim() != ''">
                and t1.activity_type =#{activityType,jdbcType=VARCHAR}            </if>
                <if test="activityState != null and activityState.trim() != ''">
                and t1.activity_state =#{activityState,jdbcType=VARCHAR}            </if>
                <if test="activityBeginTime != null and activityBeginTime.trim() != ''">
                and t1.activity_begin_time =#{activityBeginTime,jdbcType=VARCHAR}            </if>
                <if test="activityEndTime != null and activityEndTime.trim() != ''">
                and t1.activity_end_time =#{activityEndTime,jdbcType=VARCHAR}            </if>
                <if test="groupId != null and groupId.trim() != ''">
                and t1.group_id =#{groupId,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.pa_id  desc
            </otherwise>
        </choose>
    </select>
    
    <delete id="deleteByActivityId" parameterType="java.lang.String">
		DELETE FROM T_EVGL_PKG_ACTIVITY_RELATION WHERE
		activity_id =
		#{activityId,jdbcType=VARCHAR} 
	</delete>
    
    
    <select id="selectSimpleListMapForRelease" resultType="map" parameterType="map">
        select relation.pkg_id as pkgId, ifnull(relation.activity_state, 0) as activityState,
        t.*
        from 
		(
			select t1.activity_id as activityId, t1.resgroup_id as resgroupId, t1.activity_title as activityTitle, '投票/问卷' as activityTypeName,
			ifnull(t1.activity_pic, '') as activityPic, t1.chapter_id as chapterId, 1 as activityType
			from t_evgl_activity_vote_questionnaire t1 where (t1.chapter_id is null or t1.chapter_id = '')

		) t 
		inner join t_evgl_pkg_activity_relation relation on t.activityId = relation.activity_id
        <where>
        		
                <!-- 按名称模糊搜索 -->
                <if test="activityTitle != null and activityTitle.trim() != ''">
                and t.activityTitle like concat ('%', #{activityTitle,jdbcType=VARCHAR}, '%')            
                </if>
                <!-- 所属章节 -->
                <if test="chapterId != null and chapterId.trim() != ''">
                and t.chapterId =#{chapterId,jdbcType=VARCHAR}            </if>
        		
        		<if test="pkgId != null and pkgId.trim() != ''">
                and relation.pkg_id =#{pkgId,jdbcType=VARCHAR}            </if>
                
                <if test="resgroupId != null and resgroupId.trim() != ''">
                and t.resgroupId =#{resgroupId,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and t.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="activityState != null and activityState.trim() != ''">
                and relation.activity_state =#{activityState,jdbcType=VARCHAR}            </if>
                <if test="activityType != null and activityType.trim() != ''">
                and t.activityType =#{activityType,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t.activityId  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectSimpleListMap" resultType="map" parameterType="map">
        select relation.pkg_id as pkgId, ifnull(relation.activity_state, 0) as activityState,
        t.*
        from 
		(
			select t1.activity_id as activityId, t1.resgroup_id as resgroupId, t1.activity_title as activityTitle, '投票/问卷' as activityTypeName,
			ifnull(t1.activity_pic, '') as activityPic, t1.chapter_id as chapterId, 1 as activityType
			from t_evgl_activity_vote_questionnaire t1

		) t 
		inner join t_evgl_pkg_activity_relation relation on t.activityId = relation.activity_id
        <where>
        		
        		<if test="chapterIdIsNotNull != null and chapterIdIsNotNull.trim() != ''">
                and (t.chapterId is not null and t.chapterId != '')        
                </if>
        		
                <!-- 按名称模糊搜索 -->
                <if test="activityTitle != null and activityTitle.trim() != ''">
                and t.activityTitle like concat ('%', #{activityTitle,jdbcType=VARCHAR}, '%')            
                </if>
                <!-- 所属章节 -->
                <if test="chapterId != null and chapterId.trim() != ''">
                and t.chapterId =#{chapterId,jdbcType=VARCHAR}            </if>
        		
        		<if test="pkgId != null and pkgId.trim() != ''">
                and relation.pkg_id =#{pkgId,jdbcType=VARCHAR}            </if>
                
                <if test="resgroupId != null and resgroupId.trim() != ''">
                and t.resgroupId =#{resgroupId,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and t.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="activityState != null and activityState.trim() != ''">
                and relation.activity_state =#{activityState,jdbcType=VARCHAR}            </if>
                <if test="activityType != null and activityType.trim() != ''">
                and t.activityType =#{activityType,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t.activityId  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectActivityIdList" resultType="String"
        parameterType="map">
        select activity_id from T_EVGL_PKG_ACTIVITY_RELATION t1
        <where>
        		<if test="activityStateList != null and activityStateList.size() > 0">
				and t1.activity_state in 
				    <foreach collection="activityStateList" item="activityState" open="(" separator="," close=")">
				        #{activityState,jdbcType=VARCHAR}
				    </foreach> 
				</if>
                <if test="pkgId != null and pkgId.trim() != ''">
                and t1.pkg_id =#{pkgId,jdbcType=VARCHAR}            </if>
                <if test="activityId != null and activityId.trim() != ''">
                and t1.activity_id =#{activityId,jdbcType=VARCHAR}            </if>
                <if test="activityType != null and activityType.trim() != ''">
                and t1.activity_type =#{activityType,jdbcType=VARCHAR}            </if>
                <if test="activityState != null and activityState.trim() != ''">
                and t1.activity_state =#{activityState,jdbcType=VARCHAR}            </if>
                <if test="activityBeginTime != null and activityBeginTime.trim() != ''">
                and t1.activity_begin_time =#{activityBeginTime,jdbcType=VARCHAR}            </if>
                <if test="activityEndTime != null and activityEndTime.trim() != ''">
                and t1.activity_end_time =#{activityEndTime,jdbcType=VARCHAR}            </if>
                <if test="groupId != null and groupId.trim() != ''">
                and t1.group_id =#{groupId,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.pa_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="updateActivityStateBatch" resultType="integer" parameterType="java.util.List">
        update T_EVGL_PKG_ACTIVITY_RELATION set activity_state = "2"
        <where>
        	<if test="list == null or list.size() == 0">
        		pa_id = "-12"
        	</if>
       		<if test="list != null and list.size() > 0">
			pa_id in  
			    <foreach collection="list" item="paId" open="(" separator="," close=")">
			        #{paId,jdbcType=VARCHAR}
			    </foreach> 
			</if>
        </where>
    </select>
    
    <insert id="insertBatch" parameterType="java.util.List">
		insert into t_evgl_pkg_activity_relation
			(pa_id, pkg_id, activity_id, activity_type, activity_state, activity_begin_time, activity_end_time, group_id)
		values
	    <foreach collection="list" item="obj" separator="," >
	    	(#{obj.paId}, #{obj.pkgId}, #{obj.activityId}, #{obj.activityType}, #{obj.activityState}, #{obj.activityBeginTime}, #{obj.activityEndTime}, #{obj.groupId})
	    </foreach>
	</insert>
	
	<!-- 计算学员参与的课堂的活动数量 -->
	<select id="countTraineJoinActivityNum" parameterType="map" resultType="Integer">
		select sum(t.num) from 
		(
		
			select count(activity_id) as num from t_evgl_activity_vote_questionnaire_trainee_answer where ct_id = #{ctId} and trainee_id = #{traineeId} GROUP BY activity_id
			
			union all

			select count(distinct paper_id) as num from t_ep_examine_dynamic_paper where ct_id = #{ctId} and trainee_id = #{traineeId}
			
			union all
			
			select count(anser_id) as num from t_evgl_tch_room_pere_trainee_answer where ct_id = #{ctId} and trainee_id = #{traineeId} GROUP BY anser_id
			
			union all 
			
			select count(activity_id) as num from t_evgl_activity_signin_trainee where ct_id = #{ctId} and trainee_id = #{traineeId} GROUP BY activity_id
			
		) t
	</select>
    
</mapper>

