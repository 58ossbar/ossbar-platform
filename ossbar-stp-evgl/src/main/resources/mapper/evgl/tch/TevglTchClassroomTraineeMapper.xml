<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.tch.persistence.TevglTchClassroomTraineeMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.tch.domain.TevglTchClassroomTrainee">
		<result column="id" jdbcType="VARCHAR"
			property="id" />
		<result column="ct_id" jdbcType="VARCHAR"
			property="ctId" />
		<result column="trainee_id" jdbcType="VARCHAR"
			property="traineeId" />
		<result column="class_id" jdbcType="VARCHAR"
			property="classId" />
		<result column="join_date" jdbcType="VARCHAR"
			property="joinDate" />
		<result column="create_time" jdbcType="VARCHAR"
			property="createTime" />
		<result column="state" jdbcType="VARCHAR"
			property="state" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		id,ct_id,trainee_id,class_id,join_date,create_time,state
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.tch.domain.TevglTchClassroomTrainee">
		INSERT INTO T_EVGL_TCH_CLASSROOM_TRAINEE (
		id ,
		ct_id ,
		trainee_id ,
		class_id ,
		join_date ,
		create_time ,
		state 
		) VALUES (

#{id,jdbcType=VARCHAR} ,

#{ctId,jdbcType=VARCHAR} ,

#{traineeId,jdbcType=VARCHAR} ,

#{classId,jdbcType=VARCHAR} ,

#{joinDate,jdbcType=VARCHAR} ,

#{createTime,jdbcType=VARCHAR} ,

#{state,jdbcType=VARCHAR} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.tch.domain.TevglTchClassroomTrainee">
		UPDATE T_EVGL_TCH_CLASSROOM_TRAINEE 
		<set>
		<if test="ctId != null">
		ct_id = #{ctId,jdbcType=VARCHAR},
		</if>
		<if test="traineeId != null">
		trainee_id = #{traineeId,jdbcType=VARCHAR},
		</if>
		<if test="classId != null">
		class_id = #{classId,jdbcType=VARCHAR},
		</if>
		<if test="joinDate != null">
		join_date = #{joinDate,jdbcType=VARCHAR},
		</if>
		<if test="createTime != null">
		create_time = #{createTime,jdbcType=VARCHAR},
		</if>
		<if test="state != null">
		state = #{state,jdbcType=VARCHAR},
		</if>
		</set>
		WHERE
		id = #{id,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TCH_CLASSROOM_TRAINEE WHERE
		id =
		#{id,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TCH_CLASSROOM_TRAINEE WHERE
		id in
		<foreach item="id" collection="array" open="("
			separator="," close=")">
#{id,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_TCH_CLASSROOM_TRAINEE WHERE
		id = #{id,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_TCH_CLASSROOM_TRAINEE
        <where>
        		<if test="traineeIds != null and traineeIds.size() > 0">
                	and trainee_id in
                	<foreach collection="traineeIds" item="traineeId" open="(" separator="," close=")">
                		#{traineeId} 
                	</foreach>
                </if>
                <if test="ctIds != null and ctIds.size() > 0">
                	and ct_id in
                	<foreach collection="ctIds" item="ctId" open="(" separator="," close=")">
                		#{ctId} 
                	</foreach>
                </if>
                <if test="ctId != null and ctId.trim() != ''">
                and ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="classId != null and classId.trim() != ''">
                and class_id =#{classId,jdbcType=VARCHAR}            </if>
                <if test="joinDate != null and joinDate.trim() != ''">
                and join_date =#{joinDate,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and state =#{state,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id  desc
            </otherwise>
        </choose>
    </select>
    
    <!-- 查询课堂的加入课堂的时间且只查询有效的加入课堂的时间，按降序排列-->
    <select id="selectJoinClassroomYear" resultType="map"
        parameterType="map">
    	SELECT DISTINCT
			substr( join_date, 1, 4 ) joinYears
		FROM
			t_evgl_tch_classroom_trainee 
		<where>
			<if test="traineeId != null and traineeId.trim() != ''">
                and trainee_id =#{traineeId,jdbcType=VARCHAR}            
            </if>
            and state = "Y"
		</where>
		ORDER BY join_date desc
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select * from T_EVGL_TCH_CLASSROOM_TRAINEE t1
        <where>
        		<if test="traineeIds != null and traineeIds.size() > 0">
                and t1.trainee_id in
                	<foreach collection="traineeIds" item="traineeId" open="(" separator="," close=")">
                		#{traineeId} 
                	</foreach>
                </if>
                <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="classId != null and classId.trim() != ''">
                and t1.class_id =#{classId,jdbcType=VARCHAR}            </if>
                <if test="joinDate != null and joinDate.trim() != ''">
                and t1.join_date =#{joinDate,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapForWeb" resultType="map"
        parameterType="map">
        select
        ifnull(sum(log.empirical_value), 0) as empirical_value,
        t1.id, ifnull(t2.trainee_name, t2.nick_name) as traineeName, t2.nick_name as nickName,
		t1.ct_id as ctId, t1.trainee_id as traineeId, ifnull(t1.class_id, '') as classId, 
        t1.join_date as joinDate, t1.create_time as createTime, t1.state, 
        case t1.state 
			when 'Y' then '' 
			when 'N' then '待审核'
		end as stateName,
		if (t1.trainee_id = t3.trainee_id, '助教',  null) as identity, 
		ifnull(t2.job_number, '') as jobNumber, t2.trainee_sex as traineeSex, t2.trainee_sex as traineeSexName,
		ifnull(t2.trainee_pic, ifnull(t2.trainee_head, '/uploads/defaulthead.png')) as traineePic,
		ifnull(t2.mobile, '') as mobile
        from T_EVGL_TCH_CLASSROOM_TRAINEE t1
        inner join t_evgl_trainee_info t2 on t1.trainee_id = t2.trainee_id
        left join t_evgl_tch_classroom t3 on t1.ct_id = t3.ct_id
        left join (
        	select trainee_id, empirical_value from t_evgl_trainee_empirical_value_log where ct_id = #{ctId}
        ) log on t1.trainee_id = log.trainee_id
        <where>
        		<if test="traineeName != null and traineeName.trim() != ''">
                and 
                (
                	t2.trainee_name like concat ('%', #{traineeName,jdbcType=VARCHAR}, '%') 
                	or t2.nick_name like concat ('%', #{traineeName,jdbcType=VARCHAR}, '%')
                )
                </if>
                <if test="traineeIds != null and traineeIds.size() > 0">
                and t1.trainee_id in
                	<foreach collection="traineeIds" item="traineeId" open="(" separator="," close=")">
                		#{traineeId} 
                	</foreach>
                </if>
                <if test="traineeSex != null and traineeSex.trim() != ''">
                and t2.trainee_sex =#{traineeSex,jdbcType=VARCHAR}            </if>
               	<if test="jobNumber != null and jobNumber.trim() != ''">
                and t2.job_number like concat ('%', #{jobNumber,jdbcType=VARCHAR}, '%')        </if>
                <if test="mobile != null and mobile.trim() != ''">
                and t2.mobile like concat ('%', #{mobile,jdbcType=VARCHAR}, '%')            </if>
                <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="classId != null and classId.trim() != ''">
                and t1.class_id =#{classId,jdbcType=VARCHAR}            </if>
                <if test="joinDate != null and joinDate.trim() != ''">
                and t1.join_date =#{joinDate,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
        </where>
        group by t1.trainee_id
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="queryAnswerResults" resultType="map"
        parameterType="map">
        select t1.id, ifnull(t2.trainee_name, t2.nick_name) as traineeName, t4.trainee_empirical_value as empiricalValue,
		t1.ct_id as ctId, t1.trainee_id as traineeId, ifnull(t1.class_id, '') as classId, 
        t1.join_date as joinDate, t1.create_time as createTime, t1.state, 
        case t1.state 
			when 'Y' then '' 
			when 'N' then '待审核'
		end as stateName,
		if (t1.trainee_id = t3.trainee_id, '助教',  null) as identity, 
		ifnull(t2.job_number, '') as jobNumber, t2.trainee_sex as traineeSex, t2.trainee_sex as traineeSexName,
		ifnull(t2.trainee_pic, ifnull(t2.trainee_head, '/uploads/defaulthead.png')) as traineePic,
		ifnull(t2.mobile, '') as mobile
        from T_EVGL_TCH_CLASSROOM_TRAINEE t1
        inner join t_evgl_trainee_info t2 on t1.trainee_id = t2.trainee_id
        left join t_evgl_tch_classroom t3 on t1.ct_id = t3.ct_id
		left join t_evgl_tch_room_pere_trainee_answer t4 on t1.trainee_id = t4.trainee_id
		left join T_EVGL_TCH_ROOM_PERE_ANSWER t5 on t1.ct_id = t5.ct_id
        <where>
                <if test="traineeIds != null and traineeIds.size() > 0">
                and t1.trainee_id in
                	<foreach collection="traineeIds" item="traineeId" open="(" separator="," close=")">
                		#{traineeId} 
                	</foreach>
                </if>
                <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            
                </if>
               	<if test="activityId != null and activityId.trim() != ''">
                and t4.anser_id =#{activityId,jdbcType=VARCHAR}            
                </if>
        </where>
        group by t2.trainee_name
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapForWebExclude" resultType="map"
        parameterType="map">
        select t1.id, ifnull(t2.trainee_name, t2.nick_name) as traineeName,
		t1.ct_id as ctId, t1.trainee_id as traineeId, ifnull(t1.class_id, '') as classId, 
        t1.join_date as joinDate, t1.create_time as createTime, t1.state,
        ifnull(t2.job_number, '') as jobNumber,
		ifnull(t2.trainee_pic, ifnull(t2.trainee_head, '/uploads/defaulthead.png')) as traineePic
        from T_EVGL_TCH_CLASSROOM_TRAINEE t1
        inner join t_evgl_trainee_info t2 on t1.trainee_id = t2.trainee_id
        <where>
        	t1.trainee_id not in
        	(
        		select trainee_id from t_evgl_tch_classroom_group_member 
        		where gp_id in 
        			(
        			select gp_id from t_evgl_tch_classroom_group where ct_id = #{ctId}
        			)
     		)
        		
        		<if test="traineeName != null and traineeName.trim() != ''">
                and 
                (
                	t2.trainee_name like concat ('%', #{traineeName,jdbcType=VARCHAR}, '%')
	                or t2.nick_name like concat ('%', #{traineeName,jdbcType=VARCHAR}, '%')
                )       
                </if>
                <if test="traineeSex != null and traineeSex.trim() != ''">
                and t2.trainee_sex =#{traineeSex,jdbcType=VARCHAR}            </if>
	            <if test="jobNumber != null and jobNumber.trim() != ''">
	                and t2.job_number like concat ('%', #{jobNumber,jdbcType=VARCHAR}, '%')        </if>
	            <if test="mobile != null and mobile.trim() != ''">
	                and t2.mobile like concat ('%', #{mobile,jdbcType=VARCHAR}, '%')            </if>
                <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="classId != null and classId.trim() != ''">
                and t1.class_id =#{classId,jdbcType=VARCHAR}            </if>
                <if test="joinDate != null and joinDate.trim() != ''">
                and t1.join_date =#{joinDate,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.id  desc
            </otherwise>
        </choose>
    </select>
    
    <!-- 统计这个人开设课堂所加入的学员人数 -->
    <select id="countStudentNumByTraineeId" parameterType="java.lang.String" resultType="Integer">
    	select count(distinct trainee_id) from t_evgl_tch_classroom_trainee
		where ct_id in (select ct_id from t_evgl_tch_classroom where create_user_id = #{traineeId})
    </select>
    
    <insert id="insertBatch" parameterType="java.util.List">
    	insert into t_evgl_tch_classroom_trainee
    		(id, ct_id, trainee_id, class_id, join_date, create_time, state)
    	values
   		<foreach collection="list" item="obj" separator=",">
    		(
    			#{obj.id}, 
    			#{obj.ctId},
    			#{obj.traineeId},
    			#{obj.classId},
    			#{obj.joinDate},
    			#{obj.createTime},
    			#{obj.state}
    		)
   		</foreach>
    </insert>
    
    <!--统计课堂总人数-->
    <select id="countTotalTraineeNumberByCtId" parameterType="java.lang.String" resultType="Integer">
    	select count(*) from t_evgl_trainee_info t1 where trainee_id in (select t2.trainee_id from t_evgl_tch_classroom_trainee t2 where t2.ct_id = #{ctId})
    </select>
    
    <!-- 展示当前用户创建过的课堂 -->
    <select id="showClassroomList" resultType="map" parameterType="map">
    	SELECT
			distinct * 
		FROM
			T_EVGL_TCH_CLASSROOM
		<where>
			state = "Y"
            <if test="ctIds != null and ctIds.size() > 0">
                and ct_id in 
                <foreach collection="ctIds" item="ctId" open="(" separator="," close=")">
                	#{ctId,jdbcType=VARCHAR} 
                </foreach>
            </if>
		</where>
    </select>
    
    <select id="findCtIdByTraineeId" parameterType="java.lang.String" resultType="java.lang.String">
    	select ct_id from t_evgl_tch_classroom_trainee where state = 'Y' and trainee_id = #{traineeId} group by ct_id
    </select>
    
    <select id="findTraineeIdByCtIdAndState" parameterType="java.lang.String" resultType="java.lang.String">
    	select DISTINCT trainee_id from t_evgl_tch_classroom_trainee where state = #{state} and ct_id = #{ctId}
    </select>
    
    <select id="findTraineeIdByCtId" parameterType="java.lang.String" resultType="java.lang.String">
    	select DISTINCT trainee_id from t_evgl_tch_classroom_trainee where ct_id = #{ctId}
    </select>
    
    <select id="findIdByCtId" parameterType="java.lang.String" resultType="java.lang.String">
    	select DISTINCT id from t_evgl_tch_classroom_trainee where ct_id = #{ctId}
    </select>
    
    <update id="updateStateYBatch" parameterType="java.util.List">
        update t_evgl_tch_classroom_trainee set state = 'Y'
        where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    
    <select id="findClassroomTraineeList" parameterType="map" resultType="com.ossbar.modules.evgl.tch.vo.ClassroomTraineeVO">
        select
        ifnull(sum(log.empirical_value), 0) as empirical_value,
        t1.id, ifnull(t2.trainee_name, t2.nick_name) as traineeName, t2.nick_name as nickName,
        t1.ct_id as ctId, t1.trainee_id as traineeId, ifnull(t1.class_id, '') as classId,
        t1.join_date as joinDate, t1.create_time as createTime, t1.state, ifnull(t1.access_state, 'N') as access_state,
        case t1.state
        when 'Y' then ''
        when 'N' then '待审核'
        end as stateName,
        if (t1.trainee_id = t3.trainee_id, '助教',  null) as identity,
        ifnull(t2.job_number, '') as jobNumber, t2.trainee_sex as traineeSex, t2.trainee_sex as traineeSexName,
        ifnull(t2.trainee_pic, ifnull(t2.trainee_head, '/uploads/defaulthead.png')) as traineePic,
        ifnull(t2.mobile, '') as mobile
        from T_EVGL_TCH_CLASSROOM_TRAINEE t1
        inner join t_evgl_trainee_info t2 on t1.trainee_id = t2.trainee_id
        left join t_evgl_tch_classroom t3 on t1.ct_id = t3.ct_id
        left join (
        select trainee_id, empirical_value from t_evgl_trainee_empirical_value_log where ct_id = #{ctId}
        ) log on t1.trainee_id = log.trainee_id
        <where>
            <if test="traineeName != null and traineeName.trim() != ''">
                and
                (
                t2.trainee_name like concat ('%', #{traineeName,jdbcType=VARCHAR}, '%')
                or t2.nick_name like concat ('%', #{traineeName,jdbcType=VARCHAR}, '%')
                )
            </if>
            <if test="traineeIds != null and traineeIds.size() > 0">
                and t1.trainee_id in
                <foreach collection="traineeIds" item="traineeId" open="(" separator="," close=")">
                    #{traineeId}
                </foreach>
            </if>
            <if test="traineeSex != null and traineeSex.trim() != ''">
                and t2.trainee_sex =#{traineeSex,jdbcType=VARCHAR}            </if>
            <if test="jobNumber != null and jobNumber.trim() != ''">
                and t2.job_number like concat ('%', #{jobNumber,jdbcType=VARCHAR}, '%')        </if>
            <if test="mobile != null and mobile.trim() != ''">
                and t2.mobile like concat ('%', #{mobile,jdbcType=VARCHAR}, '%')            </if>
            <if test="ctId != null and ctId.trim() != ''">
                and t1.ct_id =#{ctId,jdbcType=VARCHAR}            </if>
            <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
            <if test="classId != null and classId.trim() != ''">
                and t1.class_id =#{classId,jdbcType=VARCHAR}            </if>
            <if test="joinDate != null and joinDate.trim() != ''">
                and t1.join_date =#{joinDate,jdbcType=VARCHAR}            </if>
            <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
            <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
        </where>
        group by t1.trainee_id
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.id  desc
            </otherwise>
        </choose>
    </select>
    
    <update id="batchUpdateAccessState" parameterType="java.util.List">
        update t_evgl_tch_classroom_trainee set access_state = #{accessState}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    
    <select id="findClassroomTraineeBy" parameterType="map" resultType="com.ossbar.modules.evgl.tch.vo.ClassroomTraineeVO">
        select t1.ct_id, t1.trainee_id, ifnull(t1.access_state, 'N') as accessState
        from t_evgl_tch_classroom_trainee t1
        where t1.trainee_id = #{traineeId}
        <if test="ctIdList != null and ctIdList.size() > 0">
            and t1.ct_id in
            <foreach collection="ctIdList" item="ctId" open="(" separator="," close=")">#{ctId}</foreach>
        </if>
    </select>
</mapper>

