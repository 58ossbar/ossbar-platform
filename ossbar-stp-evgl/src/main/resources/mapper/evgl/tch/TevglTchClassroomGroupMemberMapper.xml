<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.evgl.tch.persistence.TevglTchClassroomGroupMemberMapper">
	<resultMap id="BaseResultMap"
		type="com.ossbar.modules.evgl.tch.domain.TevglTchClassroomGroupMember">
		<result column="gm_id" jdbcType="VARCHAR"
			property="gmId" />
		<result column="gp_id" jdbcType="VARCHAR"
			property="gpId" />
		<result column="trainee_id" jdbcType="VARCHAR"
			property="traineeId" />
		<result column="sort_num" jdbcType="INTEGER"
			property="sortNum" />
		<result column="state" jdbcType="VARCHAR"
			property="state" />
		<result column="create_time" jdbcType="VARCHAR"
			property="createTime" />
		<result column="create_user_id" jdbcType="VARCHAR"
			property="createUserId" />
		<result column="is_leader" jdbcType="VARCHAR"
			property="isLeader" />
		<result column="dict_code" jdbcType="VARCHAR"
			property="dictCode" />		
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		gm_id,gp_id,trainee_id,sort_num,state,create_time,create_user_id,is_leader,dict_code
	</sql>
	<insert id="insert" parameterType="com.ossbar.modules.evgl.tch.domain.TevglTchClassroomGroupMember">
		INSERT INTO T_EVGL_TCH_CLASSROOM_GROUP_MEMBER (
		gm_id ,
		gp_id ,
		trainee_id ,
		sort_num ,
		state ,
		create_time ,
		create_user_id  ,
		is_leader  ,
		dict_code 
		) VALUES (

#{gmId,jdbcType=VARCHAR} ,

#{gpId,jdbcType=VARCHAR} ,

#{traineeId,jdbcType=VARCHAR} ,

#{sortNum,jdbcType=INTEGER} ,

#{state,jdbcType=VARCHAR} ,

#{createTime,jdbcType=VARCHAR} ,

#{createUserId,jdbcType=VARCHAR} ,

#{isLeader,jdbcType=VARCHAR}  ,

#{dictCode,jdbcType=VARCHAR} 
		)
	</insert>
	<update id="update" parameterType="com.ossbar.modules.evgl.tch.domain.TevglTchClassroomGroupMember">
		UPDATE T_EVGL_TCH_CLASSROOM_GROUP_MEMBER 
		<set>
		<if test="gpId != null">
		gp_id = #{gpId,jdbcType=VARCHAR},
		</if>
		<if test="traineeId != null">
		trainee_id = #{traineeId,jdbcType=VARCHAR},
		</if>
		<if test="sortNum != null">
		sort_num = #{sortNum,jdbcType=INTEGER},
		</if>
		<if test="state != null">
		state = #{state,jdbcType=VARCHAR},
		</if>
		<if test="createTime != null">
		create_time = #{createTime,jdbcType=VARCHAR},
		</if>
		<if test="createUserId != null">
		create_user_id = #{createUserId,jdbcType=VARCHAR},
		</if>
		<if test="isLeader != null">
		is_leader = #{isLeader,jdbcType=VARCHAR},
		</if>
		<if test="dictCode != null">
		dict_code = #{dictCode,jdbcType=VARCHAR},
		</if>
		</set>
		WHERE
		gm_id = #{gmId,jdbcType=VARCHAR} 
	</update>
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TCH_CLASSROOM_GROUP_MEMBER WHERE
		gm_id =
		#{gmId,jdbcType=VARCHAR} 
	</delete>
	<delete id="deleteBatch" parameterType="java.lang.String">
		DELETE FROM T_EVGL_TCH_CLASSROOM_GROUP_MEMBER WHERE
		gm_id in
		<foreach item="gmId" collection="array" open="("
			separator="," close=")">
#{gmId,jdbcType=VARCHAR} 
		</foreach>
	</delete>
	<select id="selectObjectById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_EVGL_TCH_CLASSROOM_GROUP_MEMBER WHERE
		gm_id = #{gmId,jdbcType=VARCHAR} 
	</select>
	<!-- 实际业务需要增加的SQL语句 -->
    <select id="selectListByMap" resultMap="BaseResultMap"
        parameterType="map">
        select * from T_EVGL_TCH_CLASSROOM_GROUP_MEMBER
        <where>
        		<if test="traineeIds != null and traineeIds.size() > 0">
                and trainee_id in 
                	<foreach collection="traineeIds" item="traineeId" open="(" separator="," close=")">
                		#{traineeId,jdbcType=VARCHAR}
                	</foreach> 
                </if>
                <if test="gpIds != null and gpIds.size() > 0">
                and gp_id in 
                	<foreach collection="gpIds" item="gpId" open="(" separator="," close=")">
                		#{gpId,jdbcType=VARCHAR}
                	</foreach> 
                </if>
                <if test="gpId != null and gpId.trim() != ''">
                and gp_id =#{gpId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="sortNum != null and sortNum != ''">
                and sort_num =#{sortNum,jdbcType=INTEGER}            </if>
                <if test="state != null and state.trim() != ''">
                and state =#{state,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="isLeader != null and isLeader.trim() != ''">
                and is_leader =#{isLeader,jdbcType=VARCHAR}            </if>
                <if test="dictCode != null and dictCode.trim() != ''">
                and dict_code =#{dictCode,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by gm_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapByMap" resultType="map"
        parameterType="map">
        select * from T_EVGL_TCH_CLASSROOM_GROUP_MEMBER t1
        <where>
        		<if test="traineeIds != null and traineeIds.size() > 0">
                and t1.trainee_id in 
                	<foreach collection="traineeIds" item="traineeId" open="(" separator="," close=")">
                		#{traineeId,jdbcType=VARCHAR}
                	</foreach> 
                </if>
                <if test="gpIds != null and gpIds.size() > 0">
                and t1.gp_id in 
                	<foreach collection="gpIds" item="gpId" open="(" separator="," close=")">
                		#{gpId,jdbcType=VARCHAR}
                	</foreach> 
                </if>
                <if test="gpId != null and gpId.trim() != ''">
                and t1.gp_id =#{gpId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="sortNum != null and sortNum != ''">
                and t1.sort_num =#{sortNum,jdbcType=INTEGER}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and t1.create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="isLeader != null and isLeader.trim() != ''">
                and t1.is_leader =#{isLeader,jdbcType=VARCHAR}            </if>
                <if test="dictCode != null and dictCode.trim() != ''">
                and t1.dict_code =#{dictCode,jdbcType=VARCHAR}            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.gm_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="selectListMapForCommon" resultType="map"
        parameterType="map">
        select t1.gm_id as gmId, t1.gp_id as gpId, t1.trainee_id as traineeId, t1.is_leader as isLeader,
        t1.sort_num as sortNum, t1.create_time as createTime, t1.dict_code as dictCode, dict.dict_value as dictValue,
        ifnull(t2.trainee_name, t2.nick_name) as traineeName, 
        ifnull(t2.trainee_pic, ifnull(t2.trainee_head, '/uploads/defaulthead.png')) as traineePic,
        t2.trainee_sex as traineeSex
        from T_EVGL_TCH_CLASSROOM_GROUP_MEMBER t1
        inner join t_evgl_trainee_info t2 on t1.trainee_id = t2.trainee_id
        left join t_sys_dict dict on t1.dict_code = dict.dict_code and dict_type = "group_member_identity"
        <where>
        		<if test="traineeName != null and traineeName.trim() != ''">
                and (
                	t2.trainee_name like concat ('%', #{traineeName,jdbcType=VARCHAR}, '%') 
                	or t2.nick_name like concat ('%', #{traineeName,jdbcType=VARCHAR}, '%')
                )
                </if>
                <if test="traineeIds != null and traineeIds.size() > 0">
                and t1.trainee_id in 
                	<foreach collection="traineeIds" item="traineeId" open="(" separator="," close=")">
                		#{traineeId,jdbcType=VARCHAR}
                	</foreach> 
                </if>
                <if test="gpIds != null and gpIds.size() > 0">
                and t1.gp_id in 
                	<foreach collection="gpIds" item="gpId" open="(" separator="," close=")">
                		#{gpId,jdbcType=VARCHAR}
                	</foreach> 
                </if>
                <if test="mobile != null and mobile.trim() != ''">
                and t2.mobile like concat ('%', #{mobile,jdbcType=VARCHAR}, '%')            </if>
                <if test="gpId != null and gpId.trim() != ''">
                and t1.gp_id =#{gpId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and t1.trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="sortNum != null and sortNum != ''">
                and t1.sort_num =#{sortNum,jdbcType=INTEGER}            </if>
                <if test="state != null and state.trim() != ''">
                and t1.state =#{state,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and t1.create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and t1.create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
                <if test="isLeader != null and isLeader.trim() != ''">
                and t1.is_leader =#{isLeader,jdbcType=VARCHAR}            </if>
                <if test="dictCode != null and dictCode.trim() != ''">
                and t1.dict_code =#{dictCode,jdbcType=VARCHAR}            </if>
                <if test="dictCodeWithNull != null and dictCodeWithNull.trim() != ''">
                and (t1.dict_code is null or t1.dict_code = '' or t1.dict_code = '0')          
                </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by t1.gm_id  desc
            </otherwise>
        </choose>
    </select>
    
    <select id="getMaxSortNum" parameterType="map" resultType="java.lang.Integer">
    	select ifnull(max(sort_num), 0) + 1 from T_EVGL_TCH_CLASSROOM_GROUP_MEMBER
    	<where>
                <if test="gpId != null and gpId.trim() != ''">
                and gp_id =#{gpId,jdbcType=VARCHAR}            </if>
                <if test="traineeId != null and traineeId.trim() != ''">
                and trainee_id =#{traineeId,jdbcType=VARCHAR}            </if>
                <if test="sortNum != null and sortNum != ''">
                and sort_num =#{sortNum,jdbcType=INTEGER}            </if>
                <if test="state != null and state.trim() != ''">
                and state =#{state,jdbcType=VARCHAR}            </if>
                <if test="createTime != null and createTime.trim() != ''">
                and create_time =#{createTime,jdbcType=VARCHAR}            </if>
                <if test="createUserId != null and createUserId.trim() != ''">
                and create_user_id =#{createUserId,jdbcType=VARCHAR}            </if>
        </where>
    </select>
    
    <insert id="insertBatch" parameterType="java.util.List">
    insert into T_EVGL_TCH_CLASSROOM_GROUP_MEMBER
    (gm_id, gp_id, trainee_id, sort_num, state, create_time, create_user_id)
    values
    <foreach collection="list" item="obj" separator=",">
    (
    	#{obj.gmId}, #{obj.gpId}, #{obj.traineeId}, #{obj.sortNum}, #{obj.state}, #{obj.createTime},  #{obj.createUserId}
    )
    </foreach>
    </insert>
    
    <update id="updateBatchDictCode">
        UPDATE T_EVGL_TCH_CLASSROOM_GROUP_MEMBER SET
        dict_code = #{dictCode}
        WHERE gm_id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>

