<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
	  <groupId>com.ossbar</groupId>
	  <artifactId>ossbar-service-center</artifactId>
	  <version>3.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>ossbar-platform-service</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>ossbar-platform-service</name>
	<description>ossbar-platform-service</description>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.ossbar</groupId>
			<artifactId>ossbar-platform-utils</artifactId>
			<version>${ossbar-platform-utils.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ossbar</groupId>
			<artifactId>ossbar-platform-db-mysql</artifactId>
			<version>${ossbar-platform-db-mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ossbar</groupId>
			<artifactId>ossbar-platform-api</artifactId>
			<version>${ossbar-platform-api.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
		    <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		    <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-dubbo</artifactId>
		    <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
		    <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
		    <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
	        <groupId>io.springfox</groupId>
	        <artifactId>springfox-swagger2</artifactId>
	        <version>${springfox-swagger2.version}</version>
	    </dependency>
	    <dependency>
	        <groupId>io.springfox</groupId>
	        <artifactId>springfox-swagger-ui</artifactId>
	        <version>${springfox-swagger2.version}</version>
	    </dependency>
	</dependencies>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
	            <groupId>org.springframework.cloud</groupId>
	            <artifactId>spring-cloud-alibaba-dependencies</artifactId>
	            <version>${spring-cloud-alibaba.version}</version>
	            <type>pom</type>
	            <scope>import</scope>
        	</dependency>
		</dependencies>
	</dependencyManagement>
	
	<build>
		<finalName>${project.artifactId}</finalName>
		<!-- <finalName>${project.artifactId}_${project.version}_${maven.build.timestamp}</finalName> -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<!--排除打包时把源代码带入jar包中，如果需要则注释即可 -->
					<exclude>**/*.java</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
			<resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <excludes>
                    <exclude>Dockerfile</exclude>
                </excludes>
                <!-- 不过滤，改成true会导致ossbar.lic文件失效 -->
                <filtering>false</filtering>
            </resource>
            <!-- 单独过滤application.properties文件，填充变量 -->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>bootstrap.yaml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
		</resources>
		<plugins>
			<!-- 跳过test 相当于mvn install -Dmaven.test.skip=true -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			</plugins>
	</build>
	<distributionManagement>
  		<snapshotRepository>
			<id>snapshots</id>
			<url>http://frp.ossbar.com/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<repositories> 
		<repository> 
			<id>nexus-public-snapshots</id> 
			<url>http://frp.ossbar.com/nexus/content/repositories/snapshots/</url>
		 </repository> 
	</repositories>
</project>

