<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ossbar.modules.sys.persistence.ScheduleJobMapper">
	<select id="selectObjectById"
		resultType="com.ossbar.modules.sys.domain.ScheduleJobEntity">
		select * from t_schedule_job where job_id = #{jobId}
	</select>

	<select id="selectListByMap"
		resultType="com.ossbar.modules.sys.domain.ScheduleJobEntity">
		select * from t_schedule_job
		<where>
			<if test="beanName != null and beanName.trim() != ''">
				bean_name like concat('%', #{beanName}, '%')
			</if>
			<if test="methodName != null and methodName.trim() != ''">
				method_name like concat('%', #{methodName}, '%')
			</if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
			order by create_time desc,update_time desc 
			</otherwise>
		</choose>
	</select>


	<insert id="insert"
		parameterType="com.ossbar.modules.sys.domain.ScheduleJobEntity">
		insert into t_schedule_job
		( job_id,
		bean_name,
		method_name,
		params,
		cron_expression,
		status,
		remark,
		create_user_id,
		create_time,
		update_user_id,
		update_time
		)
		values
		(
		#{jobId},
		#{beanName},
		#{methodName},
		#{params},
		#{cronExpression},
		#{status},
		#{remark},
		#{createUserId},
		#{createTime},
		#{updateUserId},
		#{updateTime}
		)
	</insert>

	<update id="update"
		parameterType="com.ossbar.modules.sys.domain.ScheduleJobEntity">
		update t_schedule_job
		<set>
			<if test="beanName != null">bean_name = #{beanName}, </if>
			<if test="methodName != null">method_name = #{methodName}, </if>
			<if test="params != null">params = #{params}, </if>
			<if test="cronExpression != null">cron_expression = #{cronExpression}, </if>
			<if test="status != null">status = #{status}, </if>
			<if test="remark != null">remark = #{remark}, </if>
			<if test="createUserId != null and createUserId.trim() != ''">
				create_user_id = #{createUserId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null and createTime.trim() != ''">
				create_time = #{createTime,jdbcType=VARCHAR},
			</if>
			<if test="updateUserId != null and updateUserId.trim() != ''">
				update_user_id = #{updateUserId,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null and updateTime.trim() != ''">
				update_time = #{updateTime,jdbcType=VARCHAR}
			</if>
		</set>
		where job_id = #{jobId}
	</update>

	<!-- 批量更新状态 -->
	<update id="updateBatch">
		update t_schedule_job set status = #{status} where job_id in
		<foreach item="jobId" collection="list" open="(" separator=","
			close=")">
			#{jobId}
		</foreach>
	</update>

	<delete id="deleteBatch">
		delete from t_schedule_job where job_id in
		<foreach item="jobId" collection="array" open="(" separator=","
			close=")">
			#{jobId}
		</foreach>
	</delete>
</mapper>